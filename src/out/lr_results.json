{"concentration = 0 \u00b5g/ml": {"y_lbl": "exposure", "x_train": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "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", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[431, 438, 370, 435, 318, 491, 498, 375, 371, 312, 490, 316, 494, 373, 372, 253, 432, 313, 429, 309, 377, 493, 433, 317, 369, 374, 255, 256, 496, 250, 315, 249, 314, 254, 310, 258, 257, 311, 492, 436]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "x_test": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJyFlO2KlVcMhW9l8KfM2ex8Z/dWRESsLVJQ6BzbgvTe++QcB6ZFqH/GNyfJzspaK99effjy9fP16d37P3599dPDm1DJ1XIiNSqO6+ND7qNL1EyPtolMJM46oUn0WDZJsXUvr2NunXbEyMqTSzXseJ8sOY8P7harK7N2STaRVnGSpPyQziO37pOkLnVaz2T5iVp7n9Id5qlT6E336o5qK2l9+/jwjOXp+vNg0TQFTGumleox5rSt6ivMBks2jR8f9MiRlae3OT9rFzEH/VIApku7OqE6Gcu2l4AyfGCrULU0TwC7lCjDilQtZxnbap8mq5MVRpXRHJCMr1Y0qwhmtJNbedM3ayItLcqrdryE9NvHPwfTRclgYBiQBJFsNnYZmLnZoXnv2gw9wVrAFDGr2Bn1HExp6yMQJeFnYr5cGTRNDonpfm/JzgAZM7Gk3mOnNjpw1XLeusckDhObOphUvteyEnX2N9Wd9yD/2WcLBFP/krDrp78G3F6RdeZfsQ6+2l58AfD+lf/3WzLR7St+UHf/6VT/4Lf6Xlcz2y+fru9+f3/9OJMxO8JIWEbPqGlMsHbhgNCWDElnDmSbWhtuNkygksmKZKsS7eiCP9C8ttMJ5cAOLNdkSUjDUqN9074VsioUiTRI65F8ILTNXklimpTbi76DYEImHEXELWaIGU/hZfSh8Yzmw5fPT9eB06Y4rGRr86YOHCiEtAb9yPfMVIg/FtvgEkjyHCPI7Rag/YTc3TG+EN2bNEErSMt7NpFly7FYQjiynFEF2S31RJB7t7EWTBy9pGeBXRuXMX1ZL2OLJoETJKaw0BNv0h8jHX/pC87W65dEIc5mQiCgUOGGYHlqggMmiA4KZK5AxBiBFQBLWDjPjKxtYQxjaXsKoZIL5gcGBGeO3Uu7F0QdYetbbNa9twmXQhyhn5jLZ3IDtjWZOHTP8UDYsbBWBurvOuP3FDurnJzmqrT/1/Cv/0XaRecAsxxBvBzovHmXByE8EJSOjGl7wfDcM5QizkWYNyeI7wz1o3ccfmwS5ySexfmhGafPxs/QfLheYBuO6XDryIHkgFnxEH3kdgyU7gs48EL9LOzCZFy1Ebxu21mzV4o3idw4N6Ghlb39+x9dwl8D", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[376, 434, 489, 437, 251, 252, 497, 378, 495, 430]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "y_train": {"py/object": "pandas.core.series.Series", "name": "exposure", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[431, 438, 370, 435, 318, 491, 498, 375, 371, 312, 490, 316, 494, 373, 372, 253, 432, 313, 429, 309, 377, 493, 433, 317, 369, 374, 255, 256, 496, 250, 315, 249, 314, 254, 310, 258, 257, 311, 492, 436]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "values": "eJzzYIAADyhtgMaXgNIJaLQBGo2uDp2Prh4G0O1B58PUJxCQRzcXBhLQ+BIk8tHF0d0BADlLBwk=", "shape": [40], "dtype": "int64", "byteorder": "<"}}, "y_test": {"py/object": "pandas.core.series.Series", "name": "exposure", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[376, 434, 489, 437, 251, 252, 497, 378, 495, 430]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "dtype": "int64", "values": [48, 72, 96, 72, 0, 0, 96, 48, 96, 72]}}, "y_pred": {"Lin": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [53.425222667449674, 47.97171566646078, 36.204828176354866, 48.78132746683614, 18.200695996983093, 56.50138365419983, 41.04182928390818, 40.65295501184134, 45.30011087804422, 33.77497843294891]}, "Rid": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [75.30361014286393, 51.203675954629716, 63.06557409121899, 28.45157176333953, -18.72754860221744, 46.41930591298319, 59.644823253188406, 55.60638275990834, 82.0625122853728, 70.11532692882099]}, "For": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [48.168, 43.344, 37.92, 46.44, 29.64, 47.832, 37.872, 37.536, 39.024, 39.624]}, "GBR": {"py/object": "numpy.ndarray", "base": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [48.0, 48.0, 24.000000016932187, 48.0, 24.000000016932187, 95.9999999661356, 24.000000016932187, 48.0, 95.9999999661356, 48.0]}, "shape": [10], "dtype": "float64", "values": [48.0, 48.0, 24.000000016932187, 48.0, 24.000000016932187, 95.9999999661356, 24.000000016932187, 48.0, 95.9999999661356, 48.0]}}}, "concentration = 30 \u00b5g/ml": {"y_lbl": "exposure", "x_train": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "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", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[441, 448, 380, 445, 328, 501, 508, 385, 381, 322, 500, 326, 504, 383, 382, 263, 442, 323, 439, 319, 387, 503, 443, 327, 379, 384, 265, 266, 506, 260, 325, 259, 324, 264, 320, 268, 267, 321, 502, 446]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "x_test": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJx9VNmqk2EMfJXipfSE7IuvIgcRN0RQ8NQFxHd38telemGhF3++bDPJ5NujFx8+vb88PHv++c2jJ6enOTLUHVIp7Tnnk0UYBRtbZRaX5PkU4UwaHpHBnNznk8ObuLOrtFqDY92kSM10tE2EN3JcqVxkuDJ8FCZzIxYJNzHvWpPPUFWxhVqOIX9oI7C3crGXoTPnafIoL83kmbw/n37Bebi8XDjmMUHhnsY+7HI+SUU6aWW5IdMMGtUsE5JxGLUr22BzUyEzRnKACkETgJxDY1zT7ROzoc1GmlZtNlqwmCRaTVUtcNfbvS51oKIUBiSJOAp0kgOTMBfMa2MWA0yw1TkbdYvp3asvC+pOi4Bdj94m1FH0TptUEkNT1sYAD1tSmvTw5gcw0zUWjHMMF24d7GsMNAf+0SWnNY+t0Wl0JyzACHRytblwYz0y0CBbXuv0RHsjMFxmrhnhUCgCbmM4/ero3ok5IBwp5gbd5e3XBccUFbO/AgR8td18pfx8i+MNy3p85fF2dZzy65fceCYm9sfzfzlTf77F9vb67eXZx+eXV4c0SLxqsDTMyiAjqaJrsC2NKabp7jeF7CpgPpbYDV+3RD7GmIZ7ctkBsY7tm9YG6TK1pgoFh+OWBXp1TRyTkgEKIYXlP0B09QZPs0A564XnQXEBsy22BTEgLIOjAbGQ30hefHj/cFkoIsqEeUO8KiWBxle+je0BIsR0ohimiXKCwoZexdHSlBAQJzP0rrHyhWRIID9GPpCHsDIS3ICC6hiHA+CSQZ5AUJsZ6gcFEA/mMLvF4umDFop14ZU2844EcQmO2UAxzsb+b/YFB+vx7XjQDk4LFOEjLLhTvhJjWa0ED9a4F4FxeEGdhgVUTCQxdVPPJuPx1kGvwK77SDoYNkgxHCfYGpIlwyfkhIddH9A8u7KYpDWIrCObFQljRok0myxwNUndcUXnyoji9NmuJdrhPUX/6PzxX/O6Q0VG14Hm9jrlVbQGSjDG8jGLlDo0jyYaJypxZnik+pBdg+2VHNBzqa9RCjeXBoS7+2Bh4ogGMziOuIrcvOdwPbG5gaON6VY6NubIGbgJCMepThzXliPllKI2JoriOkcwEi5pq5uOBNP3338AlsRfAA==", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[386, 444, 499, 447, 261, 262, 507, 388, 505, 440]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "y_train": {"py/object": "pandas.core.series.Series", "name": "exposure", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[441, 448, 380, 445, 328, 501, 508, 385, 381, 322, 500, 326, 504, 383, 382, 263, 442, 323, 439, 319, 387, 503, 443, 327, 379, 384, 265, 266, 506, 260, 325, 259, 324, 264, 320, 268, 267, 321, 502, 446]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "values": "eJzzYIAADyhtgMaXgNIJaLQBGo2uDp2Prh4G0O1B58PUJxCQRzcXBhLQ+BIk8tHF0d0BADlLBwk=", "shape": [40], "dtype": "int64", "byteorder": "<"}}, "y_test": {"py/object": "pandas.core.series.Series", "name": "exposure", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[386, 444, 499, 447, 261, 262, 507, 388, 505, 440]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "dtype": "int64", "values": [48, 72, 96, 72, 0, 0, 96, 48, 96, 72]}}, "y_pred": {"Lin": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [39.57554809403211, 45.94483319065855, 50.17685430781354, 43.69456586751793, 56.36061328382425, 52.59750434938256, 58.733809702495854, 45.66474831381221, 54.896626553383925, 54.90133877905064]}, "Rid": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [41.37929734452749, 40.634154944782864, 60.36696301801905, 30.416736615334145, 53.21622197348981, 57.297405591220894, 69.71981811222261, 46.92814832512991, 68.1157474318392, 43.84455324810233]}, "For": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [32.664, 61.752, 61.416, 51.048, 61.392, 57.024, 64.08, 51.24, 62.928, 62.016]}, "GBR": {"py/object": "numpy.ndarray", "base": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [41.001105852091385, 57.40601080942739, 18.752897661365235, 49.855154191827076, 90.94721731003767, 68.90509374365351, 97.98664878687124, 50.46940188177055, 98.4485708315766, 98.99665327257257]}, "shape": [10], "dtype": "float64", "values": [41.001105852091385, 57.40601080942739, 18.752897661365235, 49.855154191827076, 90.94721731003767, 68.90509374365351, 97.98664878687124, 50.46940188177055, 98.4485708315766, 98.99665327257257]}}}, "concentration = 100 \u00b5g/ml": {"y_lbl": "exposure", "x_train": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "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", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[451, 458, 390, 455, 338, 511, 518, 395, 391, 332, 510, 336, 514, 393, 392, 273, 452, 333, 449, 329, 397, 513, 453, 337, 389, 394, 275, 276, 516, 270, 335, 269, 334, 274, 330, 278, 277, 331, 512, 456]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "x_test": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJxlldtqXUcMhl/F5DLYgw4jjdRXKSGENC2hkEC9e4DSd++nZbs4qX2x99LSaCT9h/33m49ff/9ye3z/4Y9f3vxw92NE9bI+2erHxeL+ripl6XY/pypOTUgj14kqafMdUvd3OSHR3OJbTOvc3x01J+tEb82TkySpK4+2a0daXEmeS1O8qkx9qu+jZFl6ZodoGQc9anmK5XHd5+or1H2Vmh3Ts/u8u797Gebx9tMMY2frXhZ6KH+aBrbR4aqkA0mTTci7ay86y7Nl731/Z22Si0UU54PrkizrjCXiLcX93qTlTl+c8VNHy+eoW1iv9oxjfO/t5NmRWlW6K5oRCLHY8qVafRg9bS71bONS7Zklsl+P8+unP2eeB8vVOyu9xEW66GJipcrWY7P8rN5PQTblciop7M+hvV387DLuNfGnoB4759Bpe6demUFF+j8C2lVuT7Gm/Uj+hVmeb05a2SkNPNn+XJFVWrJvCrLpl6uBK6GKXhi+Gu72+a+ZTdYQZf4OrPj+KeU8PeX1rvXV07fv4OHTU/z/6bua5q/f/Vdzevv58+39bx9uny5JwBeY1DmIztZiwSjNLoMLseMKQcTYPUkemkPPRYYWjIpkc1bXQdvDV5BJbtoTokNzDfYVYKATcgEOgFRrKHqug1tCdVvPp8tVH4H2MDkkhLoTonqASBS9SLxM8vHrl8fbjFKHlAAWKgT05Yym26LiBnJUFpsO0FQthptChGVYrBoM6XwwkORT3uZsQXaLaD86PWi4IABkQOFCb3tiGxky9WaNQ62R/VnNFum8Rv1jM7KQfx7UD6XqulOoRWmsoYbLr2iDX719jZIbDrNopR2rElSE2sdTuAbOoreYVugAcwERhbRjAogxKI0YsbzD9oYcvAnHOAKlU2SAcrXjHOQM2Me1b4SPWwrHo/GkHrGnCgaDitkHhjIW59hfI+2U2WdIg56dcnbce9cuAIn4Tu9vvwHuwTxaFoDbHukiInSF80QvFQQlJUiR2OyBRbYlGLG0caUH4MaqMA5gwwp7OnjgsOhiLhtzv3zpwZvJoDcuA6RsYRK3KHxQCDHLsJhrtEF7gT9+D5e0Lu0zz9g0y0h+GvqKNZRZ/CLYbjqF5O/++RfsFF6I", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[396, 454, 509, 457, 271, 272, 517, 398, 515, 450]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "y_train": {"py/object": "pandas.core.series.Series", "name": "exposure", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[451, 458, 390, 455, 338, 511, 518, 395, 391, 332, 510, 336, 514, 393, 392, 273, 452, 333, 449, 329, 397, 513, 453, 337, 389, 394, 275, 276, 516, 270, 335, 269, 334, 274, 330, 278, 277, 331, 512, 456]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "values": "eJzzYIAADyhtgMaXgNIJaLQBGo2uDp2Prh4G0O1B58PUJxCQRzcXBhLQ+BIk8tHF0d0BADlLBwk=", "shape": [40], "dtype": "int64", "byteorder": "<"}}, "y_test": {"py/object": "pandas.core.series.Series", "name": "exposure", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[396, 454, 509, 457, 271, 272, 517, 398, 515, 450]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "dtype": "int64", "values": [48, 72, 96, 72, 0, 0, 96, 48, 96, 72]}}, "y_pred": {"Lin": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [42.36234936780987, 35.91947205164871, 41.22720649293937, 40.56459510269937, 38.97494572587253, 37.52417817907974, 38.028341516037415, 43.25301621214145, 43.77466846556584, 39.61575899893401]}, "Rid": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [51.538051180031744, 59.71101042143442, 55.13886784360875, 40.03734039439922, 35.22497182473313, 30.991685467376158, 38.14866466401884, 55.99075188367027, 49.46193139920683, 46.041263224058014]}, "For": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [43.176, 40.056, 36.912, 41.736, 33.768, 33.264, 32.016, 50.496, 33.984, 48.984]}, "GBR": {"py/object": "numpy.ndarray", "base": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [48.0, 48.0, 95.9999999661356, 48.0, 24.000000016932187, 24.000000016932187, 24.000000016932187, 48.0, 24.000000016932187, 48.0]}, "shape": [10], "dtype": "float64", "values": [48.0, 48.0, 95.9999999661356, 48.0, 24.000000016932187, 24.000000016932187, 24.000000016932187, 48.0, 24.000000016932187, 48.0]}}}, "concentration = 300 \u00b5g/ml": {"y_lbl": "exposure", "x_train": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "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", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[461, 468, 400, 465, 348, 521, 528, 405, 401, 342, 520, 346, 524, 403, 402, 283, 462, 343, 459, 339, 407, 523, 463, 347, 399, 404, 285, 286, 526, 280, 345, 279, 344, 284, 340, 288, 287, 341, 522, 466]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "x_test": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJxdVd1KXGEMfJXFS9n9yP9PX6WIiLVFCgp1bQul797JWZXdeiMnfklmJpn45+r++fXp+HJ79/Pb1afdZ22Vpakk7hxGKvuditkKEWYTDinO/c6MbBlbm6twtzhiLrXIKMlSK4P3O0/N1S5EVkESk1nFK6NcOqNZEXLyXOQilpUaqggJ1SoTMlYWScCQ0lpnKBq1FK8QZ0YFpuKb/e6d0MvxyxDqSFmmPGWLRWO/K4paYFgSbYoGwM7UwssIlZ20mhBDLxBXS1GPICLgkmzVxVWZ7OkZA0wjbJWwlFkkxbzbCKgCVoC6AiwbOwGKDPkAKzyDJrlqkGkA/2QyqUPaUNRJRr1zTt8ffg2pA/fKJAL8LCu1BowJAr15mrR6udkpmAgkdbpqh6HFAU0Ha5pzJQbR81JiMdBbV6l0ecdHsHy6eFCNVpNekN48MNqeJZggYaoGrhlgQBB5utdi1Yw0c/AprhMkZUphFQHYSD+jeHz8PQwJVLTnJ9ERX5anL9u+3M++vPn0FdvfTmnvLy+qnLI+Xl52uKgZ+VZTB9vXx+Ptj7vjwyATbKphM7EJrpSJySIEDbMlMUFML2eMq5u9BIuSTRPGtKG6cKpzQ3cZb/lqDAvDt3QYa9bOF9xD1Vg/zDBYtkzDZpqhXEA142kKd2CiAi0D2zZG4rFpYHmZIC2GbhuQam+tcEqYx98J3T8/vRw3RlikFdRYkeBwvEaWN7yMPRWLMgAbmuy8WDoUa4ZxzITbY5UDOjZaHIRhL5iBAF1gKRRTYAAkyIEEgFLoPYlJ8KAngDN31jDCtVgRqIIAlosHBrwAtwFZYs0jxpVGixPGRZPouDAIrtj1+bCgIywH+Z0TOXNGQDAWeuA3gMu4cMy8YGZtziob68MdGI2mUTPPyHAGDaIu6IFzgGUeQYp4Zg//2oB/u5VjLvGBHF2IsQQlbAS/MaSuOZVBvsDN4Q6YajQqHxBYBRgYPnH9z/fXFzM7QEaFDsFQFMBpDsB25Sam7ZgYLiqCQIYbTLMrZNZKJ6/DgNC/eJO6e2KAiZvLc7NRI2U7H1AQGxQehctOYLX5H3dyCUaFJtbbAT244n8CbhmeKG4K8XYpwETRB+tNAcBzE3ABHRegZhNUMf2bv/8A4PJhPw==", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[406, 464, 519, 467, 281, 282, 527, 408, 525, 460]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "y_train": {"py/object": "pandas.core.series.Series", "name": "exposure", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[461, 468, 400, 465, 348, 521, 528, 405, 401, 342, 520, 346, 524, 403, 402, 283, 462, 343, 459, 339, 407, 523, 463, 347, 399, 404, 285, 286, 526, 280, 345, 279, 344, 284, 340, 288, 287, 341, 522, 466]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "values": "eJzzYIAADyhtgMaXgNIJaLQBGo2uDp2Prh4G0O1B58PUJxCQRzcXBhLQ+BIk8tHF0d0BADlLBwk=", "shape": [40], "dtype": "int64", "byteorder": "<"}}, "y_test": {"py/object": "pandas.core.series.Series", "name": "exposure", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[406, 464, 519, 467, 281, 282, 527, 408, 525, 460]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "dtype": "int64", "values": [48, 72, 96, 72, 0, 0, 96, 48, 96, 72]}}, "y_pred": {"Lin": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [62.182715564756165, 68.56315760020799, 60.282561109430674, 30.57881944975108, 38.97369138614084, 41.99734569477533, 26.944221523205726, 47.62350136988849, 78.77283290349642, 62.31109007044853]}, "Rid": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [69.99499505196098, 77.77216954534316, 68.00476076240267, 35.06532311868665, 33.6378391340798, 30.893247122663126, 53.068500783464515, 35.118559549749364, 78.40362998392351, 56.42283976559287]}, "For": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [63.408, 64.272, 63.528, 39.696, 27.216, 32.616, 31.2, 38.856, 64.272, 63.648]}, "GBR": {"py/object": "numpy.ndarray", "base": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [66.48892463564712, 77.50363867646894, 64.6754826212713, 53.59594940359181, 16.96975375538848, 19.251142864435646, 65.16457887779268, 23.67252823804573, 77.16409562300555, 77.57990143691622]}, "shape": [10], "dtype": "float64", "values": [66.48892463564712, 77.50363867646894, 64.6754826212713, 53.59594940359181, 16.96975375538848, 19.251142864435646, 65.16457887779268, 23.67252823804573, 77.16409562300555, 77.57990143691622]}}}, "concentration = 500 \u00b5g/ml": {"y_lbl": "exposure", "x_train": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJx9mOuKpscNhG9l8U+z07TUarU6txKMMY4TTMCGeJ0EQu49T+mdze5swsYB+3unDzqUSqX+1zc//vr7Lx9++/6Hv//lmz+8+6Ovtcc9EbX2zX3r/Tu3qpHpZXX3nuHx/l1MnyPiWMS+frcn69a5wz4t2+v9u7w7Rt2om8fussuy2Dm2X0vLuaq4Yfmx8fawVafYmGZ2Ki1YtW2tYZ/s6OPjjljXI3PXTm2cHP/pJNNhsVg2992r/ETOjRU+z6jC27Ur8IRPdWtgXOU2P7ucw07usdzu9TPvvpgfyapbc++6a55wBSNs7BPHM+e9uRSgsDlqYnLus7bZ+3eWsXBpZVlujztLp3EBd/o++4ZlmxE1tl2dkNc3d6595sCWmctqxVFkg8CMczL8nLl2J4VokxROyXPd9QkLfcxFuqyO+VTMbOWYn1lLZMNqLIszfc1KxwqCNQc7ciWnTsNW25P8rvCMKsWJZbXnxqc5V8b2qcjuCQwyzzyWRep1fuUaC/Om7XO3NobA8ty/49yrjVY5js/NSr+hs8L9jorF/mu+TZ/Wxe9Y6bPutSA8F6vx+zVeVcSaHBPrZceWB6dgvhxatq+ddXbsrVADQRBVXnn4cGx/9/7dx4L47cOfVBBxC0NJ+LyYGQGc9so7Vl3jP7hV6QbmNYxL71yAVh7iFpWk2JmRJCzjQgK8CaugsI6rurYsPXd6bvBFHAm0MDMIAeipqa0E+uK24SKxjk1oWQZqubT4dMMppP5G8HDchYJNANh6grhOxXXHJX0Nf/B7xlocQRHyBwzZChCx5gbithXFpHrZZqSbUxaxtpPg7h5fZHZtoccBEiDzAl5n1SrFg7qCCzhl7qI8WIbpfKP+wMwCWSqvVQAWFzNrUgPZzlPsgx/mi9TExY59PIgHEJgklsrFKcA2GgTgeVOB3Fkxh4EuKoi9yhT4LcfNAuCgHfdxCp4YHEwxOQceV2VevkF3OMLOW1toB8IDZCS+nHNkhytY46ypaw/bm2/SAMNaWIsFO5q8fMIIVKYL2q7MQFHbx+EjF9iGijpysARYjqnquB2lCWxIHjFLlW00sRqocbydynY7xr8HxSqUlQs1rmKiFj1I2ME9lT/5PqQGtp0Q6mpG2ILDNL8LtD6nXeofMyBAqiOnMrjBohCtFNIN/HxeGn/96R+qjRe2ce4UIx/CVIfAvdAZIEzKYt4irdEfTa0hxaf4IHI7z8eFbTIkwPeULS+uhN1zCjrKpqcXIQ4kUIk4ck+WPvoZyipdYZ4DG4miZFBhsPtRUG4TqgyCU31R9CLZTq9WbkqOCJE7QJ3+GESayuEwIlN+93ORA3j2im2p4OfIxWn0HCqGdOazGdI9ByL00O2vRpJZ2gR43GKjjwe2NbOR1O6wmzrgosqww79eo3aa6Cjo5v7zarkLg1OwpN7aSBtQvNwgiW4U4seVRJG78ZvCyCeYi29CF5Rx5n69XX1K0KY5LXuN2hb5U01x4cfXqCmCi2wpcam6e6E45xVTCdYg9EnPpuNCE6Fe2YSoT+pq0AZ3sPfmcyL8fwJySLr1bBs5kV4hSECL81rbA7hD5Ecoqh4C0ZGb08A0BwrjH5OjHBL3QzNeGc92/kPQo+TxJ56gUZ+ullb0DX+OhB2eNovSmKS9Vy4MusRnd9jtNY2wPgxCcsDMfI0PHQg3UE6sinrFBeUsMnA2EM/PSunDz/9UJc3R9M//ZBi/1n3zy55fu3+pX376m6/P//a6UXGYg2b3/Mr/c+bbfW/PfGPLV0+x/dkpEjH96/zv37644Y2dX/Xo7Slvo/QVq9+e8qUPb+L59r6v3PDFKW/3fSUuX73vzb4vbqjzeZT+u1L4+fPPH77/2w8ffhJ6jPscMUCjgdi7BdGQJcAoQPUguypUo/ygdaQMNJNd+DZUrgYvwaMUwFSXQxfDdVN9haujd+5Qd6e9RfMW+N/qq/AIpEZ3Oc9hR6RZ8h7tJYU1UCZLRTwl5VNEaZJvcApcTvlI7bVpizXULF2Kta33MRexAVHqw1XN4RUqVb1BJAnHPrcutAW8R8ViIztzSNuiY9UGrEcMqn9KtLjmkjMl22UuYh9tCSndlug+RNMwLhS31Ze0KiXqDObQQJQ9wgyRS05JmhI99TpCC/NDqbAy6koagm6yIN5AwqKKX63FVGYd4lNquR0joxuTk6V/cscTI7U7GluIpNWR15BohFdwiLYcSkyAEXqni7Dq6Vd7tMZwNTF6naSvbDvSvXzDsCm/Quw+dYXo3QU/yQLUcw9/LjGjVQCOeYXZjBY7JcCJEV2BkYPpKSQVdWWolyHu6SHY2qvYwogyu1HYacMAhak7Tp0oNUnjgN4RRYhdpinZxQhAwtUgiMDprq7hijhbSzJp+gdEeA33M3ACScuPNfHjr7/89qGLwqW3kOMBhGi/vUsjJDlzqS064xamSCXaD7FAcyHLGpuoJvppURKl2a3UYgGbBgi0xtVc53JcfRYxjIvAG6EsVC0JU0QfretQal2MiGPBSGKFEjqaUEAKkuhKWtNibPZMZGABr6krrNYn5hsGIEMeEllmQY0CNtVR6OjMcMisKVXH6BMaBRbCgnjOLncJeqpR2gy58Wjw8KEfCErEZ0t1k3Hq3vQskuLSLf6MYohDKeOe5J1hQRIuaYnuugrFncyIghFLPOfpuRp9ocYvNlqNW5N65+8HJU0+XOOlVJwULcKGoYd2fh4BO66Ge+B18a8vZbxksfVMZK2QU6MWSV+tD18ncK1jSmaYAPl1nheEqXGVmmU8oHB0LfMRAw066kjnXpUQohUSpJqQFoQqVbdgihLXawGD3U2lX74GtkE+ZL+FBu2dUZSkgSqQUBp1GREYPDVsmPR0M4gxl0C5xFvTc9kj1iERyAIA4e8G5cwo0AUV5D3Q6PkBxBMRacygPvJxnypD86QYRiWjYoPxVUjRvAI19hjFvCguoZSQrPcpkE9vPd9+3j/Qv2SDqmRqQvyV7kHWLtgWoanIp2hVmnpIAR8NkRkN2enDFT1Y8KZqRwIJ0tQDiySzJCuxKb2/gEzwel2PISf0JsDxsAkR6pGOIYzRPPUUQq69M4E7mqKXuHXGM9QRgwGxo+VoQP2AQR2oc8OXYPpIqiLDyBiKGiJ3eEqyHTOBuob40kqZxsFHUy+ajmJPFbV2LPUoGBs4ZJ8GeRN2+qfEXfY6OAmuJeoUz3owwsFD8xUXrm6JKlPdKOuT0njwAGwHxAVX0u1c4SDsavAEX9O4PHJp4B0Q8dF8xCfaSugxaqlPnroPnzEuMQUyEJRUrHYuAM3RIAg53i9nDr0AQZp/ht67JIiRonrOgTqhC/Aq3C84yTSwUEowXfY6PWSh4jfG7H4s0NsT6QBd1uitxmAnSKSMSYBDjR4uIlF6RKQHugANijUcut5f1BdFv3QtalKNGEYGetUVU6IuU/EhmTWjwy+lHKNbxOiuZzHRFX2d6g5BWO9pLGJs1Usf+mLeh0LJnDodPXIBZD0IpsgXhiZ70FTlF8Ptt286CSOpHmTIt96zwNAzUHB+6Kk0Ncsx/Uv/Ew48pJtojJRi6NmBEmYEADewlveIUka3GVT11utiP7My9BxCTc8jXD30aGZawh8ZBj2hlzU9kbxATCHF5FISQKZHFHQR0xBRYqYVQGUO/SchfIK99QbVgyJicAsLUgsJKfW81aXtmnCd0Da8mY44pgdv6gIx0kOYeh+76XaoGvind+vJUMpM5A36qsNDaVIMtPW6ekDokSk0qjE5g69UFehIztJADBrgSRn5DKm4SrYBLl5D8rs9VPsqqTYxjp7+XlDWdDk9wmE0Q1iHRzppqJt3y8znZu8H5amHJbGcFoIsupVsY2zO3c8oL+Lz7rmIDdqatTf94KX3NwJ/rUXmy9Vcj4akODB3PXMioS/VNkUM2FCRciY5hFFCB0rO+nPNVY818bbGw/tMyPg9qCj6J2riqKO8pDAgURcI3FfLd6odE2z+f8RvDb6pt+9UwzME4lKjfUG3mXZznbRTxoNdFb/EN2ICgnnGeJxQo3ZFyVTvbWbp9Z+hYRWyP/qVhZiymyaEdNB7Xw/dOEvDAOKIfUHyu3//BxBf6Xw=", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[471, 478, 410, 475, 358, 531, 538, 415, 411, 352, 530, 356, 534, 413, 412, 293, 472, 353, 469, 349, 417, 533, 473, 357, 409, 414, 295, 296, 536, 290, 355, 289, 354, 294, 350, 298, 297, 351, 532, 476]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "x_test": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJxdldmKXDcQhl+l8aXpEbWoFuVVgjHGcYIJOBBPFgh593x1xoae9EXTR0clVf1b//Pm429/fHn++v7Dn7+8+eH2o9c+q0JDu93D835z0V5xdlWYWnrW/Wanc7Woe0Z5qG72Zfqq07w7kpuVvY8sE9mdYllu91sWh2VW1jEzD85yTa50PyKeO9i0LWJtWrEt0W7OhWZ7ldjR1BTvnkLerN7SlrZjb89399v3eb4+/zTzdGgtrmptpxuJ+61U6SpL9r56bZY8ernu9rQ8x8791kXvR3e4RfGGFuRMo9WaNGM+MFTtXNkWNKuSOhNmKGedOrnzqDhXgk/KiugeqBRs77cI3UtMKlI03K/OwlaYhYmf4vM4z6+f/pqBnsCPfUdb2Ol5Coqe9KwsmipY69iurJksZUomkiqpHI6m+oAr5w+7W89szBVS4CN8lB+ztpmB809J87XrpdYpBec+3oDnL7ekypBZmQBoL2t+YBqg9raXe2FBUqLMhMF7P3L1/PnvGY2Tdp35FCU8+Xl8ev0u4vFJvz3FS50+Pr2ue73z9bv6VufT28+fn9///uH503Smq5k75dILWj5MyVr1SN0KHXvktUY1WnSwa5031xrzljj63wlA3BXrglU3kgHlMrpBDAKCEcNB2LSkNAgl7gKNuy4p2TI4QRuQ0NReSzJEW47gLESvSt/Unktz9Pt9oo+/ffn6fI10joNi4umRgY1fNTLXSAjN1PEak2kI+6bzwPvQP6e32VLEITRRCJ01ti/tHbizCIWDKhXMFtJB47hjNH6VogTS5QR6YfDxNoAu7IOPMajEhAKwxFJ1sBHSIm2uZeZlnb1181Pl0R/k19tHyjBlLituUawcB5wCgkeFexgkaDiSPmN5hdg+kFiTBbhx5WlsDonS4GKBpJCAdqIfjDRrePuMz8FG7YzjQg8OqS11aP8oV4JOLNgjbOBC5QpFojNy2yHLTg8oGNbW7k4b5Kn9n+/fvmLuCSWpA87gWpTObE8uQ0o4qNCAXcCyOBGZdAeCZM21cZPYywM3ag6tl9t7GxmsUWcD9xUfxCAJAlQoy4jXsTGhYTPjZIehyImPDadNknWLkR4jmicD4L6CgZhD+D21On8Qgjv4z4B6r3f//gfkbF+t", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[416, 474, 529, 477, 291, 292, 537, 418, 535, 470]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "y_train": {"py/object": "pandas.core.series.Series", "name": "exposure", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[471, 478, 410, 475, 358, 531, 538, 415, 411, 352, 530, 356, 534, 413, 412, 293, 472, 353, 469, 349, 417, 533, 473, 357, 409, 414, 295, 296, 536, 290, 355, 289, 354, 294, 350, 298, 297, 351, 532, 476]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "values": "eJzzYIAADyhtgMaXgNIJaLQBGo2uDp2Prh4G0O1B58PUJxCQRzcXBhLQ+BIk8tHF0d0BADlLBwk=", "shape": [40], "dtype": "int64", "byteorder": "<"}}, "y_test": {"py/object": "pandas.core.series.Series", "name": "exposure", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[416, 474, 529, 477, 291, 292, 537, 418, 535, 470]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "dtype": "int64", "values": [48, 72, 96, 72, 0, 0, 96, 48, 96, 72]}}, "y_pred": {"Lin": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [63.03603379356933, 60.962861120914766, 58.42800896853973, 62.981504572276876, 25.46578397136537, 35.574434281840155, 67.08238462434085, 50.03532833660685, 60.90777042814578, 70.49658771956216]}, "Rid": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [56.09258053150265, 69.16218524025376, 70.18086250148419, 57.36057002751821, 27.489228754482706, 21.67829305767521, 63.23134299625188, 52.25660251851916, 80.13024326057347, 60.13801295131627]}, "For": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [64.536, 70.104, 69.264, 66.648, 23.28, 22.464, 70.92, 28.68, 67.656, 70.728]}, "GBR": {"py/object": "numpy.ndarray", "base": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [58.677384714791096, 55.097234355534354, 72.77629289721176, 64.98886290237569, -0.22530234669289198, -0.41536720187901544, 58.837882641111285, 32.17153178846305, 73.93797899437824, 61.75315758172215]}, "shape": [10], "dtype": "float64", "values": [58.677384714791096, 55.097234355534354, 72.77629289721176, 64.98886290237569, -0.22530234669289198, -0.41536720187901544, 58.837882641111285, 32.17153178846305, 73.93797899437824, 61.75315758172215]}}}, "concentration = 700 \u00b5g/ml": {"y_lbl": "exposure", "x_train": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "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", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[481, 488, 420, 485, 368, 541, 548, 425, 421, 362, 540, 366, 544, 423, 422, 303, 482, 363, 479, 359, 427, 543, 483, 367, 419, 424, 305, 306, 546, 300, 365, 299, 364, 304, 360, 308, 307, 361, 542, 486]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "x_test": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJx1VO1KXFEMfJXFn7Ie8v3RVykiYm2RgkJd20Lpu3dyr5a1UEHYk3tOMpnM5NfF3dPL4+n55vb7l4sPh48aXiuYs4KtROt4UO5cJmSsLJLCcTxwVy0SIqsgiVQ+HoSKV85vSxKlPh4iVFdkl3Q1hRmytaGAl0eIMJsoXrLmalVOVrEtBBy8WJvF2blKHUVdelERtxlTtOTxYIp08gaWXa+Ph7eWnk+fpqX00OWmGUUGwDy4AFXViBwVlREykVju1oQy+AcGs5DVjkdV3aGDnt0MTUYgYbmlDBcODGnpYqRIiRiq1LJuMq8UaWTLEmTD5w5ygMUtFbcVrZndUqSNJqsrFlISYQTgxM8b+nr/Yzq6QnLRoV4ryVoNDyeoAwypi9FrvAbxnQINEYM7tz3YgGDAZepaE0P3VBGYgLWLmO4xSTVrxuhcdXvbi9MkGg13F5XsCUGyY47dbRBPvd7ETweo1JnsFsyFYQELyCPkVTnr7/Twc9ojCNB7/hIt4KS9n2w7Je8n3b/x+U3R/797f3p/0/3829/TYPv8cLr5dnu6H2QMhYhhVs60UYD7iEHc6KjbmSk3eyAHxGzwS/GoTLdYdlJDVKRpcIcvJwYXuASd26gQo6cxRUOC5mEjL0gLREd6YqZBuadXFdig1WM8s8fafdh2DuG9pMFtMB+BNIE//a2hu6fH59N0JJArmsoGRhNMBa+gkrFeYcIgSacfJl3jTxGooGp4YohiKWtUtiJNDTAavwMP0/DBhbcgDCpKA16MfPpGg/AQMcohGwxXszxUllimJFwcWzbsCLwsK+jRx1WiU7LAGPzbmXmmHeyvy/NROdheHQUOAylj+GaWZXC3N6XTgIMoAdgI/WNcWHKzeqwDFjfxEACxqYzCLStBLsak2Xgqo1+QQsCmicvzNA0hrAXFxlCZucCj2CvqpdDIuAMvcR+iAU1iQCmzxwKGX7N1p5JF2T+2v3w3tSsUkoJWcJEgSJ7NcaWznRb2nNU4HpDGw1hfuro2UXlzTkwoMU8Y1TKgSPbN7A12CVpEArJtAaDVtOWTEYNAVp6LPCu8aJwOnZlvtTE5h8INEkIK2oKwd9ISqG/0BUHNrsCiVZr906Admz2vf/8BsLNhLA==", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[426, 484, 539, 487, 301, 302, 547, 428, 545, 480]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "y_train": {"py/object": "pandas.core.series.Series", "name": "exposure", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[481, 488, 420, 485, 368, 541, 548, 425, 421, 362, 540, 366, 544, 423, 422, 303, 482, 363, 479, 359, 427, 543, 483, 367, 419, 424, 305, 306, 546, 300, 365, 299, 364, 304, 360, 308, 307, 361, 542, 486]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "values": "eJzzYIAADyhtgMaXgNIJaLQBGo2uDp2Prh4G0O1B58PUJxCQRzcXBhLQ+BIk8tHF0d0BADlLBwk=", "shape": [40], "dtype": "int64", "byteorder": "<"}}, "y_test": {"py/object": "pandas.core.series.Series", "name": "exposure", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[426, 484, 539, 487, 301, 302, 547, 428, 545, 480]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "dtype": "int64", "values": [48, 72, 96, 72, 0, 0, 96, 48, 96, 72]}}, "y_pred": {"Lin": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [63.74377507871617, 64.80510377850584, 69.99340374128215, 65.6631771297929, 9.280771149726235, 14.223197833705228, 64.08598620233377, 61.1094804821505, 67.20271765587518, 64.25968103814728]}, "Rid": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [71.41938494941428, 73.22656626510377, 82.05636104466748, 91.47375623378599, 3.7336525570548247, -16.912961309799755, 88.33062778568507, 68.54784110252137, 103.40286302525556, 63.4033554988373]}, "For": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [69.456, 70.416, 68.712, 68.544, 19.752, 29.496, 66.432, 69.456, 68.712, 63.216]}, "GBR": {"py/object": "numpy.ndarray", "base": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [71.99999998306781, 71.99999998306781, 95.99936250949452, 71.99999998306781, 24.000000016932187, 32.75941929710392, 71.99999998306781, 71.99999998306781, 71.99999998306781, 67.16775210225876]}, "shape": [10], "dtype": "float64", "values": [71.99999998306781, 71.99999998306781, 95.99936250949452, 71.99999998306781, 24.000000016932187, 32.75941929710392, 71.99999998306781, 71.99999998306781, 71.99999998306781, 67.16775210225876]}}}, "exposure = 0 h": {"y_lbl": "concentration", "x_train": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJyVmeGKprcNhW9lyc+wY2zJlq3eSgkhpGkIhQSabVoovfc+R35nsxPosk1+7Iw/f7YlHR0daf791fe//OPnD79++91vP371p3d/XnOc5mPubt5P2H7/bk5f7eyI3feIk+/frZnW5snYI33kCjaNvtuaO3MNz+3+/l3EyJY+Mz1tRrBrdJve4phF1499aJuztPNYnuwx5/t3Z3qwxKKZ+dqmR2Rv1vs80S22s7RinzbH9r3mWrH64rAcvHWG5ewzhr4Zw06z0+P06Xsa509e2DaXWD+ZY8okjmm5fr+BpVy97WHhEfw4Dl80HpYjRnQ/59jgym2eLcy2jT0zMvTNaZw/RvYdcha7hnnba/PRwDLOWrZW63mm9Tmcj1kaoaPOOLlWn8bp7nO1vc9Z+/geRw7rMdpH19viqVsXDj9r7BiYj0FjLJvcaK8GsGuezhdf/aWF7c1tz+hrdDdetQ+Hb0+PM4ITOCmIYOuH/0dO4lzfjLXbdP/4snLXbLlXzzG892F1gemCj9HG99y/2u9npbbNzVOf6PR1vFxxom3ry28wdZjjMG7x87yYXWCDEPUzZs+5txAAjlq8cUUAyWbZZ+9ZR/LFc2azNxHCJcBVh1yXYVK49dbN5j7bo57F3nZWEO8xpg0F23a0cXj18nWm8EtodxM8nmcIX/zQzN3Sjg8MlydItfgE5toFMOfzJJLlm/fvXvPz1w9/UX4OUE8iHCLKN/ZOvGAjCayFXBPAcfEEXnA4KhOLCfsO1tgWswm1MQnJEAq9TwFs2D4TcO6u9MBKQNBXeI+4UPGxJnAii9fEqqnM8oAmWkbfG/j31HetkwIC7MBFRB+jOFpRAuiEcoOCOm66Nd/EdmD0kSMtYRwSelUMSKdTx2W0A384DpxdZthOGAOP7z1IKM7QGhkJbjsZLXao87runbPXicnV3DuVh85XsczkO2gBcIQDYmiK5xKiAKHds+MS/tGmIQokuAHOwI782yG84BzjtfoI/y5c0BIkgmrnPz02ZjghBdyHeLv2YTbMMhIUkChdgZ/KBt41xLqbd/niJ4iYTx1nKX3JYidNMLmLjWxqDVwGvEgeEXlxmx0lgEiTdB99yIv4bpJN2JN6qdIQioHDoQ93VvCinDPIjyYMk9DelRS8ppP8ATSgrWVyhkHvTQ5buJ/c0qVQEygyCFVfELodjrTW9yKDQdUailKA0AYK8CqBL29TLQb+WR2Dhsw0GNkbUeFkOBZeUng5gbwT9KClDK/IRW94AgIlseUNgwpmoWULYF4ICnwBNxYO+j6ptXkWyIC7OhQ4irPNqWcAYSjGOGBWkKc4wfuW33LJ+g33qIIt2IoAXrNIKQLDe3lc9/1p2v7th38qb19MO0hOQsDOg+kvJobjLbYotPjLtLYorHaIlQcuITp3I44UMoB25vS7kVAnXARqRVham6rTI8p0M9L5+TJ0sXEB9c3ul51aF4ogOCc94u6TfxyWhL354a5R0qCD5WIp3vTcgntgOyJ2rO9np6l64xaiQ8LdtXBhflPSOuVu3kWQ1IVEbDkr4xqjBIBCK7o9nwdlV81zChEMds6zc1E7OszhmLD3fREZh+uhNBzn47mHHCDxqfaeMZ7LVZYVuwU5ZDyLoHgLcScnNPV82zfxJ7Z+enGR7j6c6TAj0Dn+Gi+MNPE4iF6Pg0JOGHIwLnqNFzkA0NlH0bZ4AuvUWGKASMJP+3EbeYtg6nA0gmo8R8IzZCbRwO/r8RoB5QCQTKlS8mijGVmP+Doy3h9cgH64jLR2WHvsB0AUapNvKKkqlOUfAki2Qm9IlfWElu8cOZ1akns+VwM0CTkQR616FvGu7RXHKR79Pgjck/aYSJ7CjM9GnEtlgtxNnz4wncoDmJIH9dcwAKAFFVPb9IbHvRA8mSA5itjIV0fyYgog3oQ3XpHPLXupDs+SUzcM+ApQ1D/xmkvcK1xCyRDY4zTiinuUi1j9GhoACamTXRTtTxL9w0//Up53QT71n8QIv1EUPvnN8/426zfzTz97+9vbU95+Jpn9+ylvb/jcfW8/+8N9n3nZ5858+87+vCz+z1P+8Nn437997swvt+gPNnyxRW/ve/vZl8f2y+P+Ofu+PCofvye8/vWnD9/+/bsPPwitsMqRWhFLSzdIP7dBeVpqlyjddiRnJVwRfkmuKuckejEeKkF+jr0lRaXiW5L3tCgkDelrp9Y4DP6HKpBeEo1LJVu8Ywe+hIy1SfpLcoWObZcJq1XWIetjDPVWS2tVE7UW0GWv4+F7mAAZRv+IfKnz8QuCwJbao6kugRKOWidh+TbqsHYhQDCKRnfB6b2OR3Qq46mCKGU1Q/ii2hZWoNldnc8SESOnoRj8BoPpFSgjZBOkQpktParDpt7tSOgs9U2B3ElbNORJLph1mOQ6dwV0CW3WN5G5fAqTSjOKyBYhUYwoWfRYnmUShH3S9xWMpQ9x41bPgx8gvLB5v0koDZ5G1szrDOiaNgcHgRGUgZYIDVKASofOddW1qfdTPYgH/4aUbGkLyS9Ic5fqQ6WlpBK4oTYcpQGcKRLtUqhJf6KWCf6niU31bKiwfQOCVOAddPWYmPVSug50hwQ9Fs2LHXh+qhk+gCDzvtSlKdFxsPQuF9JwIpOOJhZVsuupS4WNNaLX57VRtUAyi3Lisx6GbucqaRjk84UrWKCWciL1d897ZXacQWWggdxP2KY85qaKDs4LA4iJodKBnQDh1NIkhIIStWVIjCHfAe+1VD1OGU65GuoIgAvx9Ncc/f6Xn3/9oCSlW+kSsGCk+ggdBIp5l9pAJPtMFXTcRrkj+rwVcaJmbJVUpfDRgnfJi/fvcFu7vqJHyyGjB0FpbDrVReOyo0GNhjJICwQiMBmCCVmrymtS1igTiXyspRFDLsALHqXlgBp+5SEp9OMx7VL7TZ46TGQadKQswlaa6CUac818aAMAFlyBfOxKBXWr8MlSeJBmAiFp7MCC/gRsYbvaqa0byeuTm8YaSLONpkZPpctdohoewfVNXe6emh10NabVg5a6hDJwvSQHJzdZKKfRUcWQRWBsSCDi3bgkcIaaLugREcSN8iIXwTO0SFqepYgAbksNak4Xs22NZfhdpy1kBD3TlD5DnjbNXdgDsUWFicPQYeg9CEPjAJmOTaQ3TltKQZOzN8qOhU6OIEFF1vxMgzs1wFDHMpTN6GraLowG/QR0zYp6dvKXoLGNWFQD22cxKmEK5ZhgRQ/SMB6gDYl1RY8gCGrkDN0b+Jcqk3ZqkpJw7FRr5kKkcMUjkIpAUbwIrkaTz5ambERV/l30q4IizMnelY+tNI48mT6BvTyYFgJgLRCanNbVeCH1dCf/UwOitGXSdMLqmkl1PKLycjZRcPQ4jhsYLL/R5+KurMqlMYYyiuQHUeSJXyuNXhLZh8y8PYMiRTtIMyD6m1Q0i08E4He//fj1p7UVJiLXeArb1YBFNaj0bCInTAgyy7VGENXb4mAYYevFppoDcjT34kmn37HEAZr8TsD7pTmInXKhOSBUtOKOZGjrNRTgyWrF1PxDe5AknR4JHzWkWUROgyCexUMq9q5OnKoLwDWIy6w1dgIcNY+mEq98xr+u9CB8UQMUAa7qF1XFNSFgFympaY+r+mhFxb7JZ7C7wFSPoNmiPmEMnKsZkabI1cDTQQBcumq1+UcjYxoUeJ/Oqys7IPAFpQDR0vo6TZU4mtoYoENRVFuuSQ3ugf00mUg5e6BhTjUkGwKDE2oEAfHSzqjPr5lnPYSOoQmgrupZAgHP5tHYW3OxU2KDviKUba7RTxbDExmKs/AHsLyKCpaS86ua2wNsasiBimk8mXrYRQ27ZjlTGDxSCUfuVrXaRHOoetAGaS4EJYNdtboaXxSaUVagXrMMSZfqQSU1jGKp8abKzazJED7ATp4AN8OnmgypH0TLWdccCxKRKzlbKq30mMpeBX4LRFRACZAovSejscs0VCnMaAlRREriOJpVbi73DvV7TrkH6V1lQzOZbGrpaKPJA69bcQVStcQL+L6zLNKhQZNdA4SY9VU2NK40BCU21nH0+UmFAR3Ucs0ztA+NRQMHYwGHlOtAiEv3kZY8Btj/YUzz9Zuq+yJWERZd5XXXUPVF7bgGtFdfqXBq8Wj2aBocucboetLLEBBqNiopPO78QGIEMk0xp+Y42kgVAwkUdnhTs7M7+UiVPpJmq+Tf+QHKEj4aspAssOp6Na0QPtZWRYiaFPBGojc17dFIvu6leDU1/1OVs0bb9LxL9yrYAwk27qBAzmkabg0BrCa6L6qikNbQn0hUo6wWE/7EFpNg9KjkehkSPk2dhKG2qRpaJNQanEy1CkNUuu4rSRzTn4swmrfrTPQcsZUEl8Todl/EcU0ULKKY6/oC+cwieU0pcc0GdTnkPjS1QSrgvqi7heimeVGoKyjY4jX9jWuiD1EJMFuNKebBfyILCRKRW/kN/1PnOVBwHqMWVZSauIgX6U8yugaB0rEGGyEWdME1ERJAXmwCzOU17SSKEHRTSdBfybKQ/3JURSEIJWZGyeEXcUcngTViByv9jki0Dwla0x57ZikauTbaBaoKtXGJ0XgQhYMKp/4He7zunmoZJCQ5LeNuRFwfzeH1dwr6kIsqqiysA+rzVox6ONqWLOYJCBTNDOsWWAoZCie5+p87EANJrik+XqOWxIXQUA3iQJQ0frGLAUK1m8Zk+kvGXA8CVa6XyiOOO0UXLBabSaQThHkRiFKHHGiCUHQzz7jjHTiaFOv6Amqi/hrzIikHZyDUaiAH73zzn/8C4TXRJA==", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[295, 252, 275, 285, 270, 259, 301, 268, 291, 305, 266, 280, 298, 281, 296, 287, 304, 262, 271, 300, 279, 283, 272, 253, 263, 278, 277, 303, 307, 267, 308, 269, 274, 255, 294, 256, 306, 250, 265, 249, 264, 254, 260, 258, 257, 261, 292, 286]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "x_test": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJx9ld1qXUcMhV/lkMtgD/qdkfoqJYSQpiUUEqidtlD67v207RSnpfXFwVtbo5GW1lr7j1fvP3/59Pjw9t2vP7367vZ9nT5L2jxSTnXd3SolV7WI70gTybvb3r2XWXpH9T7adzdOyIoIld2WVUqWhC63tnJVyUModtfqksxqlxNGiNx1dqX12a1+OBi51/zrYpm64+6WtX05x0XzdBZZccQ52CeiPHtvDuaRJWWiR1Tak16nx7Wzcm8z1TB/c3f7OvTD4w8ztBdn1lxrzZ8ztU+VlXaOne60ojz/7VwucdTDM8qmvAeAmbVKnfKYtDy+5piFGKVJM+N60qjKWOU1eb53rDK1ithHtlNOspjKrADSWMB1VIEW9GUAaLJMq2P5tpmresbknuyVMvhkunOnNi2uEyfpw1mcvZz85w+/zej3lrR1mJk1Md9mS/cWC6C7j3CDtD7HwqTZg7bs3BETdBKbiYYY56hNLFcUyzN3PWzBruBZBlKZdGhSu3yCe+k+TDAL3MLP03FWVczrdARz/DkIEQCHRQ/Qz0E7QVHadDqI/dRm6unyXfCTsvl0kR2PaLgUROMFEI8ffx8cZv1nlg+f7m7/epLnp309eb98Z0+PJ68nzZdP374Duv9893+Zf983ff/48fHtL+8eP0zXsXbpNq4sDTQCXWDUYNlAYzG/E5LYScnyRhl5rhCLhRnWgRLdJ9SjQcmwZpdntrFhO4uEyIB5ZPSaC/5OfUiYsdVyYuFFe6aogHBe1aYpzAFVFaycLHjjoyUN3epXFk2nR9e0hbLmSkog00Z/HA37OvP7z58eHmdozaAJZVo8arMY5hkNwX5YjDtEYycTE6ELRadb4VhMHuvBgHLIQJqOmhq1curAQqiFm5CGUhdjmiRv2wZYvGdmQpYJIiehAodWiY/3ufSOkWbUASE1hbt+amKsZyliSLABqKu+Yhpni+fZSR71ITAshdDGBBL9gqN48+tv1q4UWpgwF5fqGZKH4h14wtgmBoksxonoakWjD8Wnx65mGpYq6MYPOiMJnzKcjklxbvAba+rtZyUAFyhiCmccRnQszDEvY1lTLWkEOJkX5G0PF5C5JobbFYqnjPfxji4SKvENERl3FeDB4pWNjTOfqR84zfLL83GP3P4Pu3r9DQvuHReBLDgP8xmOMfIfkm/IAbsD7utw456WrJdj3ns7VliXIWEITG182QxS5GVnY1z0PiZ9IF9f5lGyCwVhkS2w4zI5RQK6pmJJyLDkOs7HbBBi2SjuzDfjfo8HzYck4hggTEwTgi++CNAoJL2eDLZ9czlGz4ckczC512lkQRJIfKrA7c2ffwElGZ2R", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[288, 290, 251, 297, 299, 293, 282, 284, 289, 276, 273, 302]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "y_train": {"py/object": "pandas.core.series.Series", "name": "concentration", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[295, 252, 275, 285, 270, 259, 301, 268, 291, 305, 266, 280, 298, 281, 296, 287, 304, 262, 271, 300, 279, 283, 272, 253, 263, 278, 277, 303, 307, 267, 308, 269, 274, 255, 294, 256, 306, 250, 265, 249, 264, 254, 260, 258, 257, 261, 292, 286]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "values": "eJz7wsiAAlKgtA4jKl8OSu9hQuV/YcQuDtMPk8fFR9cHsw8mroOmHiYPA+j60PWjmw/jo6uHgS9o4QFTj24fsXx0cXT/AwDV1RE2", "shape": [48], "dtype": "int64", "byteorder": "<"}}, "y_test": {"py/object": "pandas.core.series.Series", "name": "concentration", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[288, 290, 251, 297, 299, 293, 282, 284, 289, 276, 273, 302]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "dtype": "int64", "values": [300, 500, 0, 500, 700, 500, 300, 300, 500, 100, 100, 700]}}, "y_pred": {"Lin": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [378.52708715998324, 374.0851255586067, -190.5054205783781, 79.90103425390134, 133.39956227648236, 414.0182406431277, 278.17571199707345, 321.59175664865234, 424.5731717620256, 92.45451826488625, 118.67120051184793, 476.917622683075]}, "Rid": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [159.81217147737834, 230.27200800464834, 59.47890489985048, -13.568396966823002, 175.31444574560192, 347.6042911137456, 302.08083387171973, 276.8925369980784, 309.30554458436063, 183.3502914351061, 153.08967332343718, 328.9131212642001]}, "For": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [97.09, 97.09, 161.75, 83.53, 128.27, 291.52, 292.49, 141.53, 179.99, 194.24, 121.69, 307.24]}, "GBR": {"py/object": "numpy.ndarray", "base": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [67.59903235246306, 114.64822644109691, 459.16684469727477, 414.9456943708391, 90.80883629801515, 355.8619604389892, 225.98691802839798, 304.4919796199807, 92.88181848310269, 175.53385831911217, 84.63244498534011, 286.68115855248146]}, "shape": [12], "dtype": "float64", "values": [67.59903235246306, 114.64822644109691, 459.16684469727477, 414.9456943708391, 90.80883629801515, 355.8619604389892, 225.98691802839798, 304.4919796199807, 92.88181848310269, 175.53385831911217, 84.63244498534011, 286.68115855248146]}}}, "exposure = 24 h": {"y_lbl": "concentration", "x_train": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJydmduOJcURRX9lxCOiS5kZefWvWAghjBGyBJIZY0uW/91rRVWPpweDL4OmmVNdlRWXHTt2xPn7Z9/8+Jcf3v/01dc/f/fZ7979fpR1rjlXWXXufXp88W7UUa4RvbS6V23FSzviijlWjFpHj/bFu356v04tZY8y+lybu0qc6/S2T93jlMFds8x9tdVnGbVE25VLEfXa7bQdtZaxvLT75MFeyzxt7LyrjLi4Y9VovbfG8X3XuPqHxwqX5pjtKmOfKKvXeqp2tXmVOUqZZY2Izl1n9Avf9pmrnqgnrW9X9L1ar+tsXOzRD0edEfu2F39iY3ze0M4+ZXJpRbvOKjt2nFkJBtd6PVcddROkEWMP7arreoLQ+tqLu+ZZ10gry5qjY8RoROLD+2rpnoWpUcYHl9IM8rHniV2iDmKboSBgb0Ix1lxXq2OuHrMVj98Fj/Bhtxp7+Nxcq1y1ztlnr2OMMPbjXF3vepw9etMuYj9Or5MzT2ve1QzFiA9BxK7e1rz6aKX0PUubOjlId1k7Vt34k07GNGujrYhTSnDXIp3XIs/ltOhD63sIw3LOjNHXOcZwz3q1f2XE3BKTi9DOCmBOMTikDQR8iPN9/MHJ55wah0vcjZN9rdFqm6Gp8+ARlsTgx5nd6JRSrl56KWfx4oTO3p1LJebj6Bfvoq9BDA+gLbvN1oEFLzOIda04Z5lqH63gvHzIuC4db4vDMxOcTAFFNsAmsCIR7az15RfvXkv0p/d/sES5ezTiRQRBOEnDiEZhYUWUtgjNxBqvEYwr9iKGBe8abySFADYIifHHL+7jCIIdVOk64+xSSHmUfkhm3aW3jgfCAEjXfok5YozVJoViXOvayQMTivA84LopuVLbMcVZJ4S/BHmBK3hrLJEWFf9JX6PIK3kxCy0mFdz4UQENeNO3QlKuxQt4GMu91Ffp11qNFBfAXL0LNy7qu69ZKDySJRn1qwGSteapU8eq1HaRZi4QsinBGQodI67cRfB0rGxwSrqwj4rZx2cpRgAh9rgyqBCeHZv0A10iQlGtvAZwwRIsClKoSFHSKAVprpJo8JjFTSK3yNSrYs17bW15lEP36piIKY3DJZQeAAKwTPMDiAYmt4bNArMmn1A/ZHbyqBRTW6eWR+19N3hyWX48uKk/3nXWJjyZHBIBo6xVu8/DiAkeqOHwLIipwCrNneQruBgWWBXncUjrnvAFL6uRQbce8L1SJPQMjCMdY1xYwGtLnwK2YtwG6MKN6prVF9Bo9mVvoco6UVxWF2yddnAjkDIe1GfDrU0WYQiy5m1JSMQjeGPhdu7jd/uikitF0Yix92EvLLLIHuXVh1HCSh49wAOr1zp5DeahJIhyW6f0mpbwf2p/U1Vj9/SVf1KtFAFPYndtJpr/eEMbFBckftrHFfynb/9qCb/Qk4h9gUTAgF2VJ18aZFboEjAkFQcDeo1KIreWSo0FDr0GQA41c2gCoKFqyktrlw2O9wJ/yEgy9MQAocXqtDwNy0sjr1Q2gaKnUNnrfs2aBMyWTbqJw2MP0ClQBh63kidWmIe2TBOiHLDzfpgEwRVYwn1Q12M49DbINsbQGm8bScAC4osjZjzPUgVEC/7vjysUKJgYRrBb/Vyr9BE+UoeEGhpf93HAohIVOpy96AkivF2h0FOTk+arhTRRcgOWo9j7jAOqAHcpUyztz6shOCqU8gPS67z6R3sYxBw08ca8E0ralmYjWrxnPvGm2IYhGGRg7+dpLjU6LsiYs9/XtvSNOfTKmi3Vi+AWljWytWfT0O/lCxpdTlqRS15q9nH66qo0mLqfVyMGaNichiD7kGpJtAqLPkjm486wXqkZwIP5T4Q6kOvKLSxDXTzRANo8fWue85xJAxYDsGogLh6HqEXsO/SSNOK+08NAJTErCIX+2InjvB5VErStdQeTMAwbVYCh+pjJv9F/deM55f1AEubpvh7NBR88R6IkET4USJ0W9xN2OLdJHLDPfkUWNG3CQTCyZez7op0ElEKbhdp77iS2uE6IIMZhQzUZg8ZNicBRhHU+gEMXK9RIJwbU/VHBv//+b9Y7SDv1+McGWazUjz6Nc371dzOe3/V/97vnzPHLUz55X18fnfLJ7+r46JTZ4v868394w9vn3nr09tPb5z6JWX3z6TciuJ4745ef4Oz70/qPlr2x5RP/fitHY/yX3n7i0RvLfsu/TyPx6zj7JEcf3iBe//j9+6/+/PX7b0Wr4m1bDZ0mAfGpew0cZLyzZx3ZwSYUx74g+adSi0tOaHamnirES/waFQm92oSrVQzVcHuxp1GfW1nm8DUhzZKCeduX4VdICwcQCbTTklYsxgMICRe4SxZHCEPhvKr72nAOUS7cPI1GCWzLaw5nlDL6Bta0GzXIiYOKHQs49Dy/61FVs9I+Is9C7S2nEuTekdYqcXQWKavpQ7Pr4GWnmeofQ05TVEGyBU1hbJwCW+p9dIHq3y7QmG9nOj6LmoxejrYd/bmr2RHtaT1nByQxZxBX/uJ7Wgadq/NmpbFPx2a4sWk/TRc24sQMIjJPgTv1XMLCpRE2102XQc1kdBqtjjdODENGp5e7MkAp9BH8LRtuJbB07QAUCPSZehqsoFcQOuYErBxdoo/zSpQU2h7IZTKRKiUUrE6MrY3nmhNYKDqHnQ3bpuMKGaAVlJ0BQrqcgrDYoZzOw6D+hRRgWi/q9TuMweemoFEatTto9GqkhGmYkb6DPJomUUODjBstDFLd6eN4dd3noxhVlmqNEAdkk6Sn7KOIyspL5Fw3gTU/RuYcbeoYjKBAzKZ6oHKqvYrcNtudVwihPZ9BimwqkBFVDq6Yjh5AyvRMnYjaykNnOt7wWqff/PjDT+8tVPDlqD7MMVOQVpGhqwlUGh+FOlPeI3kBq014IMLjGUfoZfTMI0XoonrgUnVyICI+hyUk99XPEdRkBIFI2dN05Y6dUpsyyOlutYscEcht8nq+lXFs2C4XEwrDlcrdIZBwE13yccw4HTzcjCCliWIkZyz6LLneSi7hoW6fgeygEzugklNh4KAU4Bc9gPBoPSc+3YdXVrd+i5MRQd9AntFm1IOOFY5OvqBU+Yf63EaJZ0AaY9/gNspCvJNvZE1que0o6HCby7DOrA7gybGSiMEZmuBljPtuD/SK8KbWJCDQgEBeOSc2K93VAfUKoJkwh2sGgLTc0VR0XVaxWEMwGTWKAdwSIhcZYCqcPKjXy7y3HCdxPx11Jh6ufIrC0Cluq127fALbzXsqDguZt44uJhMOxWFPPBeGwtFzLcBHYMmkVyiWrUQlosVtl1oSgZpu5RwHnJRj8GQ1cFQAs7OyjRlwn7jHQpI6iuNcI2vOZxTPBdU3xShBcb6gffiCWpNLej64j5MEghwymUaXdnIBC4YdygUXdQoKhRWgXFS1OMlrAccTbmdwazSdPyKQEYkxEWhqx1F9OtCTHHSvMQJkSMpgcielVNN5qog5iIsQmUsWl03VEYR3bixczqvbCZa5aDt7M5F8vL/5+ufvPv+4z4ZbqgvixVBgkPByWXc5QBjSnLHhBNeCbrgwa+aWCxqegBo6AtVEs+YWZ/skMDyxbqESFh7zo4uA5TzioyDJQeMcpmS3ed7GZG07cVw7qX+pvqAu3bV18bUy+c6/9FnQW3ITyZzOLBqOzcURNTPfixOi0/+hRsRWWfRMnlpOdG7knLCm0ijktqLj4BgyYyCJcZqzPkbAfHFN92I4X7M8IBgsne6MgHQuaoZrR4qIQbNJ2Gk8cHZxQ2sZoFS3afDulI8d3t6UyyuzRVimg3y0HPLhAHiAo+nsNKrcI7ge4ZJWwOHGJ5wALmWCgNj5KG2MR7kNRcQgVTOdJsV9M1XQgeZ83ZlYPETUFpA1RBG5qbZjAuz2urziILk3hw3jTbsj7SRlGuJ2VzPRtXNDGvfuxsUab1AYgQa4uedSjmrgKW7cHpDohWxgsD2tODUX8Slk/R4W0TLu9Uk2XNaRksQwJyZYFvZh6HZNp+kyCKTdLjSSMqkLH3F17vUFzGALN8vgEvJBcOF+TZ7pCqmL6maS9auCG5A7KIxhj67J7OSlD1HEkEgzcPtLhJv4cL1HPSbfBXz7+vXFyTEfL0EkDDuUa01EogOrPR4p5sDnHsJAdR48FhSlVz9Z2nz+pu8yry75dxPbFakfcogFcMihrkgjK/eOgmAQdxtCyBBS5svUVWgemA/Z1TFyCDmDyghbkr+YLCElIHBImLO7EHihjdMKoc0iG4Z0+xIu+fERaGV3cUkU7igZADYdZdCHcuUxaChxwUxUE11BTfoS4ZaQxoc6DEOTgy5C+yqAr+aXGx7IZOs6HCZ2czROjs528mzCUGe0e0rGbPKS+y/Xibnae5kkkpRKu25P80TqoqSwIss4+SwSEMzX81XANM0vUHwqE883EsZ62sgpNlBBxu9lRX4fROzKqO5bMjAwVG4x6Z3kpOUSCkB3j1tq3fJskrgHGaLIcYFR8qILLdiNmKF657PrOn4JhHHEK4XRfEIYSksYjXaVSwlTEoon64dYZPj9sozxgeShb8hLv18jGTpwQdCRI8xLp9MueBS9QxHPBw4nv0Fo5EFVEukhtQbth3soRXhas/x+awsjCi8dtGpgE8KMVJVg7xXJ8IsXegB8KXL0Benk0hw9TPVRFhlamnAuqrvfcN1foWA3g5h2uy1DXd021joT2bpMFediS2PX1fgJsdjN8hrCwp17iu6SSaVWloMmjc4l+7MVYwakfpffPnLtiQQ84H4GgQjachB58fsxb1QRTSWgmCX2zT2QC7V2J9AhCtZzMnE2/PIf/wR699SR", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[355, 312, 335, 345, 330, 319, 361, 328, 351, 365, 326, 340, 358, 341, 356, 347, 364, 322, 331, 360, 339, 343, 332, 313, 323, 338, 337, 363, 367, 327, 368, 329, 334, 315, 354, 316, 366, 310, 325, 309, 324, 314, 320, 318, 317, 321, 352, 346]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "x_test": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJxdle2KnDcMhW9lyc+wYyzJ+uqtlBBCmpZQSKDZfkDpvffRO0mZZpaFsUeWpaNzjv9+9f7z759evrx998cvr354+tElbZlq7K3Htpznp6Paq45VWIu6+POT9cl16pRIxIkjSVi0r3MkMrJVdU6mkqxPdaS0SbN1ZK/aYhae5iLPT3G6VpTsc9qTM89PbqkrOs8p846Y7EF2D/X0nkvYsjhL76u50khlIov/7Sm75JB9iqQsN5Vuzd1vnp++9fzl5afpWY6mc522ns5SJ5Po7r1sl5/0UqME3bPV2yVcerdOVJQuszpSEfv0nNxevlr8kLBO9pm9dluap3xbis5Rz5Slmw5BbtMXN4RSbJ1BvnrnZDM5oAPsahJ1mpaUGRlgbA1zr+wpjst6uRqllvN94KdKXV7M0rdUy2Prv374c3q/KehYbGl6KucwB2czQcsO/XmVTsE3zVV5gqYqXCNr9himB5OfojvdIcdNatmpfcSCoWbZ7PXKULoyPUypLO+ntzi7eZhZD3o3jUX1nAPtsDK9l6MALMDTpWJp93L80BhZN9TkxvtpEKV0yKPi91tiUbCHW1G7Q4sHHF4+/jUw7BVMaj5J/6wg67Xya7W//hbXyv0xMr9G2rVCIw+r/0Xev/+XRe3hhu9+E3/8rb5G5tT988eXt7+9e/kwVV/DzbTt6EYKcCDCSngvED3RrUyKXBuxMZtgIMPYiSJmOJM2f+FD0gXThzwVjbQQ48TJCVQHPxBim82WJtNie4SAkinZVzGfw2Yg/MyrDkbTEAvq126RkSedlSB6JJCjmTnpiocEORnQ8ZqobTAYzUoCXcq3tt9//vTl5eob3i8Z4m3MqWTwRa9cSe200wybRImYDMZGjYgyRjpmU2vTwRiQDOUg7obudQacKe0KO4tVoEuFepswLCkX6FkWpuA6wKJgzu3S2nsshpOIc2E/9KeFiqkMga60GlRzVFWj6j2yQ9VGuh1zJwUFGjmO01oTmA80xZ1fP06ecxiPCmAik8uKaHEjnfEdxlljoxTRVAi4ubXH0icOd1/4Gl5Ro29ao9AgbHKpQxwq7BNFHxV6tt2dCCNsUGe8Nr4zz8AABnRonBmXjOfzInQsyAUtkT54UEdVzatSniDil03aPB8LW7Se12TSQYziUnyoHSqh3+8M6/X/WHDzoM1V8yjhRzpDuvFEyMWpZmgCnHc7A2Q2m1fmmyXfOCvziMm4LoY2POZ4Mhlqxy41Lobehhc5BnQEhvNUTCC0wlu3Y2YBufOyKZBCWLx2xdN27gmTI6tgH4bIpyduSIt/M/pUWH65Kzhw896xScgjMYcNcwGjDYgeyXvy5p9/ATLYnMk=", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[348, 350, 311, 357, 359, 353, 342, 344, 349, 336, 333, 362]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "y_train": {"py/object": "pandas.core.series.Series", "name": "concentration", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[355, 312, 335, 345, 330, 319, 361, 328, 351, 365, 326, 340, 358, 341, 356, 347, 364, 322, 331, 360, 339, 343, 332, 313, 323, 338, 337, 363, 367, 327, 368, 329, 334, 315, 354, 316, 366, 310, 325, 309, 324, 314, 320, 318, 317, 321, 352, 346]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "values": "eJz7wsiAAlKgtA4jKl8OSu9hQuV/YcQuDtMPk8fFR9cHsw8mroOmHiYPA+j60PWjmw/jo6uHgS9o4QFTj24fsXx0cXT/AwDV1RE2", "shape": [48], "dtype": "int64", "byteorder": "<"}}, "y_test": {"py/object": "pandas.core.series.Series", "name": "concentration", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[348, 350, 311, 357, 359, 353, 342, 344, 349, 336, 333, 362]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "dtype": "int64", "values": [300, 500, 0, 500, 700, 500, 300, 300, 500, 100, 100, 700]}}, "y_pred": {"Lin": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [503.4213875306733, 425.6950116327347, 99.98413963189557, 529.5199855768409, 661.7541066750256, 586.625784624771, 621.6621170809034, 132.3285314415532, 430.6599916797612, 95.44505494776536, 205.63882890068874, 99.90127321736566]}, "Rid": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [559.9956184887826, 547.5058277047956, 140.92506568936233, 585.142905890636, 688.2637843504656, 628.0176242934033, 567.0125825779289, 128.90918506857042, 566.4528683927397, 136.75869799145676, 177.279426100833, 0.9250925285477933]}, "For": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [615.93, 607.0, 135.1, 610.2, 611.0, 607.0, 611.31, 94.67, 606.46, 112.6, 86.75, 70.31]}, "GBR": {"py/object": "numpy.ndarray", "base": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [703.8890376545365, 619.3748353775071, -15.22432459104116, 701.3470695461259, 404.0360136367189, 643.0476619800256, 694.9140294215025, -89.54014558375968, 618.9079840242567, 64.5054468837661, 71.04536145311634, 3.473762904555915]}, "shape": [12], "dtype": "float64", "values": [703.8890376545365, 619.3748353775071, -15.22432459104116, 701.3470695461259, 404.0360136367189, 643.0476619800256, 694.9140294215025, -89.54014558375968, 618.9079840242567, 64.5054468837661, 71.04536145311634, 3.473762904555915]}}}, "exposure = 48 h": {"y_lbl": "concentration", "x_train": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "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", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[415, 372, 395, 405, 390, 379, 421, 388, 411, 425, 386, 400, 418, 401, 416, 407, 424, 382, 391, 420, 399, 403, 392, 373, 383, 398, 397, 423, 427, 387, 428, 389, 394, 375, 414, 376, 426, 370, 385, 369, 384, 374, 380, 378, 377, 381, 412, 406]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "x_test": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJxlletqHUcQhF/l4J9GGnr6Nt15lWCMcZxgAjbEygVC3j1fr6QgOefPYWd7+lJdVfv3m49ff//y8O39hz9+efPD7cdQqVWu4tu26tG7m4vKcj/bPVo7NDnTiNUpscW0JOvupuW1Yrf7lmyNJoo8K8Ntm9dR14nqWh5ZGVtPFEemtpdXPZ/WXDTl4q4yC4sKouToEqOZXWer2N0tonppn+xtx0SJmgaXdEafItOVqnQxS5mfkN773d3teeZvDz/NzNt3MKHpyYpkbHJ3MM2WsBbrpCStS7qv46Q+ljtqWmAqWmgaAgwVwpoMq1Sta8tmqLtbgsFijs2Mx8uAhoqea0ce0MtpkjPx8gUI2nXEbDPQdMSRS5pSZPahxzdFYxNTpwf6dsslEhFdQonJdVKWJpPTsID6y7l//fTnDH7Pes4UT4IthFbubve719a0kyFSs0+GutdcLapOkEWzYZ1IFq5Hcnu2g5Fe1886pnEACoyOtD/mVNh0PMihlv2YsgBBt8EfxqunlO1NmTDWqOH+fLjbuo8Cdoo/deRzscREuq6UZ8UpjSSBd7o+zQMBFYZBXZhhL5B4+PzXAAFL2df8DpjzZPvFE5t+fDrXux2vIvvxyf//Lk68vPc68lW915Hf3fsv5/T98+eH9799ePg0XetCX2aNfiQhnxG/ASWaTcoIAxSh0JoHOdDLIEwMOxYxrILFn9MR0wVnDk3E0qcY3J+zIncjWj+TH67FSlgY4I6W6unm3KvZuKIyHXqPTqpReA67pHxuwmyOGV1DrsZYk1272Q1799U+XWkKssNZRPN56I9fv3x7uKaOY4s9brwGPuW+lNm4ET4gSGi3Uq3ksHaqMzm5cvocscIBDMM4g49c3YnfNfv202Yyct2BHaDB6tNtGCGt9pmV0c/Oo7vJppBzUY5eZwMXEDmmUbgXoug8Y3gAzpiYAbkBY3QDbrYYGX/lhx+MhPVwtU0KyRIVL0iKNb99uXfUyXAUwwiG+VSG9DZsAF9lhpEsDj3dGC6Jw/KHFyIqeBjsdHx13MVRjCSC5QQ6sCUb4JjgbCuaGU7VRkMHOQNx1gi6QGVF4nKJeeYYbRiTYsOC/qjgNc6Oo+LjCopge1HfSnFR7AUzxsuFMKrUspRZOLaz4zurevtq//dh7rLGhg5ZVMYm761h9HDAM2BAXG6wD4kTtGBBW15xvMPrB+MNaJfhWTleiQ2DWw5/5i6M3qx3fJ7b9uiMld0wCPg2/Q7R7135Gq2Gs8oXx6WvIlBkYf8wXwmvy69sOjzI9dKSXN5kGC3+TjJWCXg2GccZ4K6IjK2+++dfv/SZ3w==", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[408, 410, 371, 417, 419, 413, 402, 404, 409, 396, 393, 422]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "y_train": {"py/object": "pandas.core.series.Series", "name": "concentration", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[415, 372, 395, 405, 390, 379, 421, 388, 411, 425, 386, 400, 418, 401, 416, 407, 424, 382, 391, 420, 399, 403, 392, 373, 383, 398, 397, 423, 427, 387, 428, 389, 394, 375, 414, 376, 426, 370, 385, 369, 384, 374, 380, 378, 377, 381, 412, 406]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "values": "eJz7wsiAAlKgtA4jKl8OSu9hQuV/YcQuDtMPk8fFR9cHsw8mroOmHiYPA+j60PWjmw/jo6uHgS9o4QFTj24fsXx0cXT/AwDV1RE2", "shape": [48], "dtype": "int64", "byteorder": "<"}}, "y_test": {"py/object": "pandas.core.series.Series", "name": "concentration", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[408, 410, 371, 417, 419, 413, 402, 404, 409, 396, 393, 422]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "dtype": "int64", "values": [300, 500, 0, 500, 700, 500, 300, 300, 500, 100, 100, 700]}}, "y_pred": {"Lin": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [440.1870731234096, 510.3958607014115, 74.03042876407699, 522.9587645090191, 593.7882006588168, 477.1797734368156, 62.62332090112068, 528.6853144883455, 497.40515527851653, 69.51368518339086, 60.78549726530514, 506.5513699510809]}, "Rid": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [420.49519750004174, 525.1892208531681, 180.21947481860616, 484.90765796288997, 652.2685418883461, 492.15681584039385, 190.08275059080506, 536.1253992762879, 516.5312501599269, 54.05358329973251, 141.7691614222349, 505.98258674744284]}, "For": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [509.92, 555.8, 123.53, 510.26, 553.66, 468.35, 227.3, 553.66, 485.13, 45.84, 37.65, 546.32]}, "GBR": {"py/object": "numpy.ndarray", "base": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [300.0000000636271, 509.62006722531066, 300.0000000636271, 699.9999994227885, 699.9999994227885, 411.6211586876103, 111.7729673781729, 502.13713082368815, 509.62006722531066, 45.798659078172946, 45.798659078172946, 411.6211586876103]}, "shape": [12], "dtype": "float64", "values": [300.0000000636271, 509.62006722531066, 300.0000000636271, 699.9999994227885, 699.9999994227885, 411.6211586876103, 111.7729673781729, 502.13713082368815, 509.62006722531066, 45.798659078172946, 45.798659078172946, 411.6211586876103]}}}, "exposure = 72 h": {"y_lbl": "concentration", "x_train": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJyVmeuqJseRRV+l0U/TJ8nMyKtfxRgj5AtmwIZRWzNg5t1nraivrXM0qM0IgfTVqcqKy44dO6L++d0Pf//H3778+Ifvf/rLd7/99Lse+5bWTzt3zjr6jM+f9tmVa7Xfttqqcbk09iyjtrnvPOvs/fnTOOuWOu5pe8e9e33+NFtEOa333dsel5tm7avcO2b0dm/f7fOnCI6ad8bpe6w6uTT7GCXOitv6bLPxwh4xy91jnJh3zXt4sJ5daju9r1r7iIqpa2H+OoF59bbGFa6f0k+0Vudu9XB8b+eUtX52cnDYjFZui5exk7vwtbR1+ll7zr0b18bsBx/rrmPH2Uvz291l9Dq+Ppt+L6ITt4+15pnLS93Tzrmjn9vOvFo2tGy1cXqcZqRjcdjcMVubI1rMjNguu24seR7mwW6kW9wdfZ3MkB61vufpte3amknDhnfB4dJop5YamyDleRy12lwctUaNUYkLKWqxo+x3Zhkx4lb22tHGrj2qRpzBk5n7vk+fFVvj3FXGvf/ynGuL+8u69+wzbkQjcecs8DRI/D5n7qOXRKTUOc+Nukcz45h8wMXYm9j1FWsbnzhl7F5njNXv8KWjkfLz7q28ACyW/hwexKbjFRnaJe7AxN1ucGmue8qDVf/XLMWcUWaNn4OkA7cT24h+E0a8sfLgmNRAX/z1LoExgOc7nzJxFVtvjAfJpGlaNTXLqu+wjga4Ke9OCqHYKuGp0U9dp47Y4/efP30t0x+//NEyzZPunaS6jb5vN/obK8rFcMKwDkcbMMJeFmV0OneOayTabeXgNwaauW51LZycByyPjAa3NYF3qVXQDxIbp5FGyMGKHN2o1SyTsQFCbYBzc+OQCu6hCu+p9W4OGEax4ehasUHKPtWUBLCj5uagKilSzuStNfBhrKjc2oY5n9gGGVyQuAZVhh3w0QWiAu/EnRnaW4OgaVuFJDoP9t6kEWIblGCtDz8A5ADr3Bk9s9nnAqGYiiUb9tNRWOfOQmx4U13b6B4QUrhaMX8BZC5BdLzUNAWUA0Xkk713mHFTTvUxDfcOh7UDK0CIIxJokGnBwOjAGGCZvr53WcRzgYAsRcqujwLoFuy4ejp1e11kinoa5kGaJRdULMzMQwbQoqA8CC1UBWs8sIIEur7DwBbttBLBzXw4+4CGdIqyu7UEvACfNRAl35CpAiNQnIs64kFLXsa5hIIaPb5gA5nSKRvjDwJORohSIRjaEX1aKnD6IJAAFJyRo6wCipIyWGEpbGHl6zcvAL+8fNkVhLn8xa9ju5CrwOqg0oF88F5SqAOdF0zKi3LlLV7r4FNSI+EkjwAkPEg1zE1xcmvV9w7WL1mhHODK7AukYOAV9l6qHqzgAL0Cy0TaPPI+sML3Qiuc4gYfxnxfsv/xp/+yZt8aOO4mCxqifEDW509v9EMRO8+hzi45nc/FY4ioIZrENeI+fSB+amBCJgvUPjfym58DKiCzO7zzFGoGkqE0+0ySfKP7QLtrnDOA5oCifJoIQ6kbzjhrRNKWT9NYq5CAvKiA+TpSBqd64U5Y36dhIPrLHvK5iX6MBLx0QRwlDisfJms0eyqXCFIs4zkRdxQWbVTejgWvi5zXbCkYfuYZj5X9DMwGsvQCCOWrjzzUsYZWVvNxOyVFLBrIK+B5IgRFAGFQSHij5tNbONthCA+qJl6xvLRAEE5T5TX3FSLIg8TMiUP11P44RGVK6vANtscrZ3RvYEj38Np9ndks9dY4ts6RFtH1yT2GNtN2vqbRrkPlEPZeX2mkaDbBUZzw3/VcRHF1+BcioQheAdIWGjLxpZOmi9Q64eO1ZIYA9HaeO4OeDlTgZsv6X2CDN6h1dACvG89FuizPTmilP1AlO3DhSNY96pPnRGA1o9LRujF/oYXGRyS64vC2vV+JACgXtcHN3P1ACEKmclcnwBT2y567GjjLTm3jfgWtrUUvr/2cF3wxfJlWaqSqS9bXUHIZ1xeMYitLI00KrwZdXy9xmG1lKHLGfayhLaCWoMq9bLyP09RVv7C+SiPVig7iAhzAvxAUBfiu3r/89b8t91pA+vUfz6lImfb8Wv/317fuNAj5K/7tnRDIz3+DQJ9f89+eGfdXn/v4t1+c8vFv5/lpsn/56xeW1f3rkfjWmR8juOev/u3/EYmPtnx838c3fPToG3aiJ96/78Mp33zftyL48cxv3dnm+/x9wMvPv8Trn//65Q//+f2XP4lWFGG1PVKyjUmsOy/MQr8f9CEaNWpMZT2lSMga1DMdhD2oUx/VRkXzoVa7NMX0A//DTrDRuDYgx4emCoBB4MvhFRQPb4LV60Jk+RwUUVE7inbu46Xehnodyg0kXEsGhdloenQEWjM2D1mMWed2WjQKHEE5T96GCJkX0kFyIn5n2lrzaMUWOKhpR5J1pf16G4Wf1l5UI2OYnWfmGEATotgRwjAtB/S04zqwgCfufE0LzFwcpopuagilKVyBV00diG+Ofo0pibaJwVQiwZZU1AEqg624QTseLw34qdMImckIinOwosvAq4Zoh/dJyo7hxLheEmBC3lhJK0QX35pHqTNpL518IJ8zSUvhN3BQq9Sg+N2kUqIDezII5bUll1842gbl0Og8h14ETJVOd9Msp7EjSSKih0gkl6otFEvbRrdnJBpRQjWgqpiY4sEYD90MIqo0g8M5V0Gqco8UOkQiHAORc8R0JqDU8kBqbueOGw/swtObY7gTVAKDsdLxhXaLsDtpBqrq2suHMJ2ZNmZndBAdgQSgB/IacaCaegr3NdIndJFqGJnuTJRpC5sFIhtQ0eHzrolWBqzElrRbN8hn2jbqZ4qFeFB87Om8jLsEUPrE6IpH1XZGrObXMv3h73/78UvWaWdmwqKgB/PMETlCqzj18YQBCocORE2RCWjYtLjEJqAdakhbOFO+pjZnzSwSCqxmDfI3ei16Ah210DweNpHn0AAimucIQS6FnLfA7kZBOtQ5Wc5e6PpXCDA7+E56bHM65wc1FzmvIAW9FFivhksS6ajspm6rKvQU6M3tUYqd5aqoiiAyK7YR3pIGWdG6uMga9JTKQsN9xUQbTAbaqXGZAoANSYSDkzN/5F06j0RyLYWY4xJ/wjaQZV0juzJsy22Ug5MDsthGQgE15DD/IGJPOBUoConYsYizoiliSQ59WynEo+ukBYUM78yEeFfHIHXAlSsksAWA3Qsct0VcwjbitjMaU9y6GEI04q07HuLt6MJopV09x3aNRdWDZlhkOiXdLZ85Ag8VvMKUTMEICi5XWo782sFUzbjIWAyQONF4E76iaEalQdv5VlSl5h6XcVbkToBQQaYT/oG2fSsBo9whKJQchWctdgEC4mEvEvhaM2xrTzJ03LmyNMqNCVS0yd1udfChtpIdIByguq66gIK/HNKpxeMyDqVcFMxMG46eRndpGZhcz/bMJcOe4grDGIQUA5kC3MQKa4Pc5eQXhIMr0C4hXydrA3CWLW0vcSOBkdBBX62YRa+EUdY7Kfj9T3/5zfsui8aHKRn3eC9t1NcgKhnVpSuK9+bKbzwLPsxkGJLqcQxiIjfeRBu5Sbnba9AuSUUA5LKNoDL6UiywXYXu3MXAL6W6sCBytAiXQqh1ss+cAMZXPui+q2Rl0ycpzOvmlEi6LuR1oZp2ZUMc3N+SGbCe6EWKg65wAkUJ5zZyxI3C1EAvV4I7VSIgnMOYbxb0zEyum6RECkGrQz6R8bXbFgDkVNbsti5TWy+gtNLKKFRvC8dxCImBY6jCbV3gkUQQBl6IefL3dI8mm0PPvGwkAJczIj2RGEODRsPdIg8S7LCjyWQ2zeK44cJ46IAD13b8YS5F0uSWSCPdbQLvbZvTAbSmywEEUbduc7HjxqtY+bJXWMxQiqsSKZb/s1yNLTRAJ3EfBVsM6Q7CJgcA0Y0KIsnqg6uL6NlOr8caiuOqET3QZ3KB5tJr4AbqkvJ+lnduwEPl76G0/Oy+/CygeUCclF53y0Ku3Zo529A6YuXeb5OCRW+v8nFuwul/t9BzjjsQ2k6uel3CwbkawvzkQlv2peeQI+qxOT3D9Izf9O1qRzkWJE37TlcqsClpb3nXdW9cbanVgd4MJ+3S+sKqf5zCbF7pQgT6kp2gEXgebcqotiOrm9aO8gBlBApiFFPdlZ87cFoJ3u1frGt+86HnvnXLqyBHmI4pzlyydMuCRl/3TlEng74RYxyZkgbya+8cXQkuyEQtCdEZuVJ7cyeANMFlqAC05EWX2AQaxhue3p5peLgW3EhpdxMjcvKl1cKukGiTc2vPI4GN4D5+KHAG9mK4mvQibtbn2w3ubIN27C/0VkXe23A7R5frflWIXIxyIGXiRxfukRVyWwAy8MYeCnhcIqSN8EsxOGqE+jhIQrbiTqiOaR4wBo4tyiWag0vpZ2CXLqaCB+nex7MH8kMLspTiRBxls36j24b9Gu+qHzyeQBxn8abW7q4q8tU0fXxBNg9J4VnP4Cx0AL1HqkAFxpsbzlvkieP+cJ4nsQCdqqYsFWYZL6QALlc/y4gpHwU3YS9zfR0nN49vdGygrbuEH0w8azIlEtY05Xh1w5dO+8HDDQUHITNzw2cvhomEExi/D8x4xo8Nbi9shrmTwNgpdcIe1e3z6zVKKFc+Ljh7+lepvDLdyBGynv0Kb9CDz+TCcVaNJzaECySIZiYPuYbhqSHJ0iVaSsjIKNLqGEbbfo1GHsgNKivD7veiJ/0YnMt3P/ogh58VkB8SSnKP3w8yB+qKcL+vsIT6nhUZ3GALmaq/cBeU3qhp52SEnTB6FoJfj4ZfKTBGOn1cgQAQBHSCJi2nLwhchDoUspG5ff7+f/4XEmnUHQ==", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[475, 432, 455, 465, 450, 439, 481, 448, 471, 485, 446, 460, 478, 461, 476, 467, 484, 442, 451, 480, 459, 463, 452, 433, 443, 458, 457, 483, 487, 447, 488, 449, 454, 435, 474, 436, 486, 430, 445, 429, 444, 434, 440, 438, 437, 441, 472, 466]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "x_test": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJxdldtqnEcQhF9l8aVZDX2cns6rBGOM4wQTsCGSk0DIu+frXZlI3htp5p9DdVV1zT9vPn799uXp8f2HP39789Pl59juK1Xac4tGnuvF3XydkGPbIiN8Xy9pbavFqmOnlzDle/uqPtanZUdcL+E9M3n2qbI6xpRqraodViWexqoM6zU3yRHtCOUoi1jbTDVMtx2t60V3gKJ9H93sawFZpsuyqFMObIlObgjJtbd0b89gkcnWpS6ipil7H393vXyv+vHpl6najPkVUrnZVlEcVJq20ixNvIsfR0UBgusMsLlD/Xo51bIa/G5ZOhf2zMgGD/+cpMSGvaU5+8JcA7asPPaiqOgtVDlEHwGEi0F0h3N6DvknVxwZgLItN3sP9C1VeFFtpJoijQLXYWuek7ABOYiwGlBbz6GGfFn275/+mrofbK92PUqBFvwF7AMKIaBkmUlS0cCdha6FstWtbT04HvSsrhh+3BPAPXO9PIBhmdtHh7xP7iwvikM91zmwUKlRnGJkxH9eZhnJmfgP6uJ+SVKdiaBBH/iYyb2w0MFOIe7Rw/uDnaVMMixYdjvPZ+IYruA0LhPdL3h4+vz30CAr+/4rypK1S+8jn1HW/es4gG/5PIrbyPw+ytsIxf//lq0vz3z17YfRq1N+uM+fkcXg/vXz0/s/Pjx9GtTYp5pyWZGqu2FfWU4DQPrYgB7FBjilgwZhvHdIzCr8eui/otHoB7vNHQyjxq0HWaDwNtc4tnSUp+2hExek0Nc28Lh4mmLJjBrmacKMIW1wtNyMlb1z6w0bomAzBDRBCs05rqTJGholmw46N3Db8bsVuTI6fC/749cvj09T9ylQhEoJobJt4yYtOsfImdDgX77RJQRZKB4jfPQkt+kx+gau6TPg9+yko5wC6DBS5WzonMTohqLTpIE0vUgHqw0u2zQifSVzZ/ZZEwPDYSiFsGwL8UByYmMWjp5O/6xzQINKNPt0E2gI1CLfCrH3BKqK6iIMQlHJJ9Je2JRsfvtSeYB6LFSWIpyRpiZG3QiKg5eGE7XJGNAv6BpHATxZVqLEYx96QifFqO2g7yKB0OkkbphV5Ppym9TkjtMT7xFVK2hoIblsSNkkO28FGzEbSTnU7dnYZDCRago8lh3IE5JXJ2Admgx/EjKYCx3VZGIHZ5IIqYc2ly6E+yGv3r4ywQNlCozl+FCw5J5YcJ1HSAhjit14rSYWlHhaRbJTH+VPPz44KeNj5kkEBJzdvB+T3IkEkyg2MRWTKPSBGNOT8rcwHHHXLYxQGkLsdjedSKIrQo+r025Zis2mLCoXEMXcs50gWviXY+ZV8DkSbthtrSS+z1M1k1MYHmteR9yIh979+x93IJ1h", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[468, 470, 431, 477, 479, 473, 462, 464, 469, 456, 453, 482]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "y_train": {"py/object": "pandas.core.series.Series", "name": "concentration", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[475, 432, 455, 465, 450, 439, 481, 448, 471, 485, 446, 460, 478, 461, 476, 467, 484, 442, 451, 480, 459, 463, 452, 433, 443, 458, 457, 483, 487, 447, 488, 449, 454, 435, 474, 436, 486, 430, 445, 429, 444, 434, 440, 438, 437, 441, 472, 466]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "values": "eJz7wsiAAlKgtA4jKl8OSu9hQuV/YcQuDtMPk8fFR9cHsw8mroOmHiYPA+j60PWjmw/jo6uHgS9o4QFTj24fsXx0cXT/AwDV1RE2", "shape": [48], "dtype": "int64", "byteorder": "<"}}, "y_test": {"py/object": "pandas.core.series.Series", "name": "concentration", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[468, 470, 431, 477, 479, 473, 462, 464, 469, 456, 453, 482]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "dtype": "int64", "values": [300, 500, 0, 500, 700, 500, 300, 300, 500, 100, 100, 700]}}, "y_pred": {"Lin": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [89.27097353760132, 564.2006101104491, 131.30637477166147, 491.02665192436575, 403.9373944551255, 422.9545509351881, 40.30233942510904, 468.3001925038609, 590.2055957502814, 509.3158806726892, 19.575482804319336, 507.2227529671011]}, "Rid": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [98.96029421145704, 580.7666706600312, 70.47584752074681, 465.47187870765447, 509.18136193984265, 359.9449270003852, 75.19672171570073, 460.18910420984594, 723.0807155910402, 744.1734541221872, 41.21318443624068, 531.0560544273521]}, "For": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [63.49, 555.8, 41.95, 539.98, 467.05, 491.24, 36.65, 536.32, 540.52, 490.61, 62.43, 521.96]}, "GBR": {"py/object": "numpy.ndarray", "base": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [43.15760235232113, 420.43120390495505, 13.41339687768592, 337.71411079138704, 591.7210172297259, 513.1622962847639, 24.51711466596676, 320.1143502620836, 749.1829592641423, 596.3474547001202, 39.64953709274627, 513.3943976740553]}, "shape": [12], "dtype": "float64", "values": [43.15760235232113, 420.43120390495505, 13.41339687768592, 337.71411079138704, 591.7210172297259, 513.1622962847639, 24.51711466596676, 320.1143502620836, 749.1829592641423, 596.3474547001202, 39.64953709274627, 513.3943976740553]}}}, "exposure = 96 h": {"y_lbl": "concentration", "x_train": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "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", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[535, 492, 515, 525, 510, 499, 541, 508, 531, 545, 506, 520, 538, 521, 536, 527, 544, 502, 511, 540, 519, 523, 512, 493, 503, 518, 517, 543, 547, 507, 548, 509, 514, 495, 534, 496, 546, 490, 505, 489, 504, 494, 500, 498, 497, 501, 532, 526]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "x_test": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJxtle2KlEcQhW9l8afsNPXdVbmVICLGBAkoxDUJhNx7nn5nhTU4sOx0T33XOaf/efX+89dPT1/evvvzt1c/PfzsHb06OyK2RuTE44NL1roONmmlVo8P4SqrXEqnOqQNM61Z231EvCK50eleYiLRJVbbFavcsnyXlGt77HSCyfjaamKjpSXkzCJn7RbZNhKCp03XalH3yu2pitmE7mXiaV7jLQRLSls90VNbx3UeH6plzY5oz6mc3W8eH771/eXpl9N3dzhlRZSbzghem6pP9ekZ48EXajAVWVG7yEK9QpdVqYs8eypqlGLoyKxW4ieaxh91beawvEy6lIinyd6myyhbmCOj4Mp2T6/cMdpJ88fRs4lP9WU17IDwKltXjm7LZkiNY+lm/OHD7pKaWZJa6zqhp3O3T/jLxn//8Nfp/KazWIqllqnNqe/x4VxGZVvKlmG9Q1M32ySQFO9qFXq9LCmO4YRXz0GP+f2SmZE6XVRaTms3VuWbvRd46dqSz5Ygw1ycAYbe3RneEN1omeHxOYlMluLFEGRv2XX2f7NYCibAyOW94+4dYnvUaIGP3nOHb9C1fWq2vhjE08e/zxyAc+w5nxOEU+bLkz6f8jp9bwnOrpP/wO9u+O03efarH0Qxf5nh+1M/W14L/PXj09s/3j19OFXr2n2QIW69CxQf2q1xsJMCfxxoBfCAOaD2DAiWdttlxiLgqrNiSrlwy10qxFcDOvx6VqQgwZltQBHqr+uKVAeyU0TYsaHdajZDg4lENDmvaJRske4HiayErOyrBiVJM0uKtuOKuW1RhRjgWI+nDxRySzYmot3fGn//+dOXp6tzQI1ohHkkeJir/JhZZDpX+EKWQ2PkgN3LIBn8O+WTbXHsyV2A7+oSr0Wh28w9+kISnK61IZ0bksAdfZornJKBZLaRgcC33UAc0gfLkMOEoQpLWGJwog34cZqS9iV6JCBb6tLWDtgn5tvP4JAZFHIQBaEvFXqk4BdYRaVfv1w/k56VrQRIVsIIEAU/GDSUtdGUI1q0yh36gkyiuoe2SeijdyxUYY9ixjL8QGLDJdTeLjE1CDZIKhwdpJ0raG9rs0wBW3R3MhC1HCKGZrPUAweElvgphg6k7z59GXcoIl/QhvvLcqS5Wc0cgcsjZCj34mJTIfGB2/806/V3KLj52S3qjm3VyAH2jX4ml0Qe3SrS3uUjEUhl96yT9Jf6sDI7c6DEMDgwl2GwuwH/qOHR2GMXTpbzkF2wqpMFjVcQGOeVOwy6FPJsnEdj4pRvcWkU2mZMlharzptxGRZcXLyxcDJhqcfdG8M5ExykSw7ebtU8EjwHEexhu/Sbf/8DHEidIQ==", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[528, 530, 491, 537, 539, 533, 522, 524, 529, 516, 513, 542]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "y_train": {"py/object": "pandas.core.series.Series", "name": "concentration", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[535, 492, 515, 525, 510, 499, 541, 508, 531, 545, 506, 520, 538, 521, 536, 527, 544, 502, 511, 540, 519, 523, 512, 493, 503, 518, 517, 543, 547, 507, 548, 509, 514, 495, 534, 496, 546, 490, 505, 489, 504, 494, 500, 498, 497, 501, 532, 526]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "values": "eJz7wsiAAlKgtA4jKl8OSu9hQuV/YcQuDtMPk8fFR9cHsw8mroOmHiYPA+j60PWjmw/jo6uHgS9o4QFTj24fsXx0cXT/AwDV1RE2", "shape": [48], "dtype": "int64", "byteorder": "<"}}, "y_test": {"py/object": "pandas.core.series.Series", "name": "concentration", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[528, 530, 491, 537, 539, 533, 522, 524, 529, 516, 513, 542]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "dtype": "int64", "values": [300, 500, 0, 500, 700, 500, 300, 300, 500, 100, 100, 700]}}, "y_pred": {"Lin": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [430.6832559722927, 441.9108077862368, 23.44739774733057, 492.9498491227838, 509.05759196841825, 542.4468574442841, 480.9679365466129, 59.28816264838065, 403.04436010286554, 200.01979137773833, 90.2700081227988, 589.3410984472154]}, "Rid": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [570.1564279557408, 481.0566601054022, 51.24404387844402, 381.0188104004453, 495.15597466094255, 348.46008561236863, 334.4480596801329, 39.06044608702382, 584.9925142056725, -8.309814964108455, 24.895509518378503, 481.82754407109746]}, "For": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [401.43, 532.86, 31.18, 539.8, 537.5, 497.37, 388.61, 32.0, 526.3, 49.31, 33.22, 533.51]}, "GBR": {"py/object": "numpy.ndarray", "base": {"py/object": "numpy.ndarray", "dtype": "float64", "values": [489.5690625476524, 614.4737265856437, 5.444588415965373, 549.254089608574, 500.0972210815238, 534.2049088300083, 620.8713734621282, 24.04451778539556, 504.96013619083055, 46.34556033872173, 29.046830557344062, 419.44526210518086]}, "shape": [12], "dtype": "float64", "values": [489.5690625476524, 614.4737265856437, 5.444588415965373, 549.254089608574, 500.0972210815238, 534.2049088300083, 620.8713734621282, 24.04451778539556, 504.96013619083055, 46.34556033872173, 29.046830557344062, 419.44526210518086]}}}, "dosage": {"y_lbl": "dosage", "x_train": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[407, 399, 351, 412, 361, 495, 288, 419, 334, 492, 531, 266, 360, 380, 291, 357, 541, 254, 338, 287, 423, 316, 505, 356, 283, 430, 539, 493, 446, 528, 502, 268, 263, 340, 545, 417, 293, 529, 487, 369, 508, 290, 328, 532, 387, 436, 510, 366, 348, 257, 476, 431, 381, 280, 420, 304, 277, 485, 418, 297, 488, 408, 460, 282, 342, 395, 284, 453, 312, 472, 474, 315, 403, 437, 496, 507, 296, 468, 455, 289, 270, 350, 318, 302, 386, 273, 481, 383, 451, 365, 547, 391, 479, 406, 523, 305, 310, 421, 422, 333, 426, 363, 520, 499, 367, 450, 394, 543, 509, 303, 516, 428, 443, 441, 347, 461, 379, 346, 519, 331, 435, 309, 343, 389, 473, 397, 401, 518, 535, 330, 373, 482, 483, 262, 345, 489, 294, 456, 352, 285, 517, 269, 522, 459, 324, 449, 467, 526, 544, 398, 512, 251, 447, 301, 255, 454, 377, 514, 326, 362, 314, 432, 400, 521, 409, 295, 439, 323, 341, 448, 506, 336, 392, 494, 259, 411, 281, 385, 415, 332, 306, 414, 404, 349, 374, 272, 375, 480, 444, 258, 536, 353, 402, 511, 384, 538, 475, 274, 445, 313, 264, 358, 275, 325, 292, 252, 298, 540, 279, 370, 364, 527, 465, 513, 458, 250, 271, 256, 390, 335, 490, 464, 317, 299, 405, 501, 503, 525, 427, 530, 486, 320, 378, 393, 382, 452, 504, 321, 484, 286]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "x_test": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "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", "txt": false, "meta": {"dtypes_rle": [["pd/f64", 8]], "index": "[438, 372, 434, 462, 355, 376, 425, 322, 524, 491, 515, 396, 548, 307, 371, 327, 260, 416, 469, 278, 276, 359, 500, 261, 354, 267, 546, 339, 542, 433, 388, 497, 478, 308, 300, 337, 344, 413, 329, 466, 470, 477, 440, 253, 319, 471, 498, 410, 265, 457, 249, 533, 534, 424, 537, 368, 311, 429, 463, 442]", "index_names": null, "columns": "[\"counts_avg\", \"counts_std\", \"counts_skew\", \"counts_tix\", \"fit_rate\", \"fit_const\", \"counts_avg*fit_rate\", \"counts_skew*fit_const\"]", "column_names": null, "is_multiindex": false, "is_multicolumns": false}}, "y_train": {"py/object": "pandas.core.series.Series", "name": "dosage", "index": {"py/object": "pandas.core.indexes.base.Index", "comp": true, "values": "eJwlk8mRJDEMA11pA/oh8dBhy8T678Yqsz8KVZEESBD6q7G/n7z3HT2/n5rxbovb7e8nzuEf0Sz+vWjni8Za5I13nHfEnQA8qC6iXVQcAN6/inyf81X0aPIWgfevcoB3QeazSIlDXsABwKK2yKumlw1bkkcZ8LkuFSRfGhIgmUPyBHQSsOcij05rL6I0fuiZOSrIG6/72KQcKUX2EzUgKiaPA0dx/LRCoXbUAN4DISYow3lBuQrhHHTAlNUCXHjpoDngzeEcCLYBOLbLjW3lanRxg6xsI8lQRNpQ7OlYRAOopDZcniISdfuL1uS9BSjRQYDGm+UVwla5KMjhLayS8KbL+1kFtoRcACqS2YoRUiXHJNlFkYcP8jcgqjFgLNVFOnW5qkvjjTfYTGsGt89s1bAFeQUbEzWjdrGFCxubCY2uakOzwqFj2XlPbj+F6IDPwk01MKFKDhuiLKXUooLqXWpxXfJcisaD1mpqMzeor5wcDipKIqyXdJ9bExLdasCiSihVUwgEwyA9BWVvPLqiIrZCaAHlBJnaIJpBylUNDsXhlYW71IRUdLhkxdZ1vh7zlM4pSWaNxa0k+j1T7Uit69ZI8Bagzc4LZ6ePbuP2q1XcJWOphoozW5z17z+NJdpU", "txt": false, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "values": "eJx1lLsNwkAQRAEJBCIjJiAhJSY0PZAiUQIlWCKlCPdBQkABlEApSPjeSvvsm+R06/Ps7Lc5Tv5oyvk99Ofr0p/daTKK5t6f11W2t8985/9unu34aRfTZDcffuK+zv8b5rsti/2W/zd22/w/8Qdviev7HtcDPrP83nG3+2I/Zb+ge+iu/50PgC7rxk59r+f8Hf+vzbjduqwPXsN5wa95Q2elnoO+eWc7fOQz6rfJ79FJHwz03vNJH3IPfvWR64hfdFBvwB1e+pMTHvLlOPHvOQHWQb24Rx6KDvrUfOTN/V6rH3bXcRA/+kt8zIvj5p3raT7yVtNjHfir7jX1iecJf9aNnb4gn54rYF7qjN31wO49XQN1c35ijx0yX+yleX7nea/l23rITw3e08BzFv1Q9NX6D5Bv5897DxA/deOMOS9z6v3v+GLeNK/w8d7z9AN19nhb", "shape": [240], "dtype": "int64", "byteorder": "<"}}, "y_test": {"py/object": "pandas.core.series.Series", "name": "dosage", "index": {"py/object": "pandas.core.indexes.base.Index", "values": "[438, 372, 434, 462, 355, 376, 425, 322, 524, 491, 515, 396, 548, 307, 371, 327, 260, 416, 469, 278, 276, 359, 500, 261, 354, 267, 546, 339, 542, 433, 388, 497, 478, 308, 300, 337, 344, 413, 329, 466, 470, 477, 440, 253, 319, 471, 498, 410, 265, 457, 249, 533, 534, 424, 537, 368, 311, 429, 463, 442]", "txt": true, "meta": {"dtype": "int64", "name": null}}, "values": {"py/object": "numpy.ndarray", "values": "eJxjYMAOEkIg9AM9VHGHZgh9gQlCNxSgyjeoQugDQlA+GyNW82H6YeBALIRe0IPdPQscofZzo4qjuw9mn4IMdvsXsKKZi8O+BE4GFHNg7oOJw8IHph9GF3CgmgPzJ7o9MPNgAGYPDDTsRqVh4Q7jw8IDw90hqO4AAIQ3Hj0=", "shape": [60], "dtype": "int64", "byteorder": "<"}}, "y_pred": {"Lin": {"py/object": "numpy.ndarray", "values": "eJwB4AEf/oAFMPt6mYBAQLvg+PESqkCA54wz6SepQACE2XucylXAoF3gmIhyqEDAdcUCrl2RQJKQUHszAuhAACDTXsqVR8CAsqZhbKmqQAA58Lwl34tA4LgxlOF1u0BgN8JQkLOpQKJlG2E96ONAwDEMdVxwyUBAkozLdxOvQADieBo1JZNA4MHREsWUtkD8qun87xDgQEqwYMiZB+NAmHaq0CWRwUCAm1tq7h/IQPShBOMZXt9AwIgfuE6dv0AoRB0QunPHQPBnYoQYgtRA0Me0ZtAWv0CUXUf59gzgQACuAgW4bKRA8rwJkfyg5kBAmTm7BHKhQIAk6kWjnqZAgD8nDyhfjUCMf3s2RhTeQEB+qt/skJTAwL2/hrFgsUAgV1svFTiuQFAmVDXrk7pAZFHtxMwO4EBAo8LeHeCrQBgilEu1O+FAyqtWC0Fq4kCoJ7lG+tXfQACr0XC4CbtAEHiAKwS5wUAAC/a+KXuCQDhp8YOgP+NAYMcO7HhzpEAcIDEEB+jdQFgPYUOU0cNAgO9Ic2HhqkBAbi361V6zQOxVknG3HuNAqCLAQxzK3UCsxxZburTcQEAN3VlhTuFANAy8uP2C1kAAUOvjzDQ3QMAODBPAt6dAAHgOOFchbEAAzsYRviqHwBG05PI=", "shape": [60], "dtype": "float64", "byteorder": "<"}, "Rid": {"py/object": "numpy.ndarray", "values": "eJwB4AEf/hBmQdRa6ahAYBtBFAq3r0AgYqYCsGerQMAEtYHZZ6hAIKN7ewd2p0CwUH1151CqQLwg4i4aGOdAgAB8MzWapkBgpsLkComsQADV9Q+yWpzA4D1IbI4MrkBg0ncXuRSyQMEKK1t9j+hAMPFe5OELt0AYr+VtE7ypQABU+m9R5ahA8O1t8NhIskC8aIVbIirfQNcXkbKDAehAAMJSzA2emkBohBVIEGa7QPSidGga5ddAQDZhfaYtr0AA2W+Fw+W6QEDGhSIqjtdAAAwvnBSXl0DJ/XoIDLbgQCguWcCipqNA+ZUhxmT/6kAg20iCxxWrQBhjOFe16bNA4MpyLldbpEBCZQvsXgTmQOC3ekaedrpAgKPZ8UeRlUAwJh15gH+rQIDRnnJbuKVAj3qdgraq40A4bfCC5SawQG3qGi25t+JAMB426Hf94ECovvLu4QjfQGBv8snTHpVAQPygYuQpnEAAt28RlbmvQJGJZQLmDuVAwF35EHsKmkDuQXik9mzdQCi7KzGJM7JAMGC5XZx3sUBI6hObptezQC9aKXG4y+BAl1wra4ev5kAOodPVuPvVQIW/dgBr9uFA7iaeoti610DQpApZSS2owDB0yFAeVrBAMFO7mSLmnUBsYVtABZKwQDSb5cw=", "shape": [60], "dtype": "float64", "byteorder": "<"}, "For": {"py/object": "numpy.ndarray", "values": "eJyz5bq+uMB0o0Pr68AdckenOaSBwLZFDoe/asT0P1visM79YZUIwwaI/NSVDrNmzpwpGf7cQQQk4bDEQR4ksW6SQzVI4NJcB6BqICPRYUmBLdf1/KUOhUBKecZzhzdA7a2rsxxi+g991TDY6MAAAjfmQdQn1jgYg4DvXQeQc/YufA7Wt/hDOsSeJZ0Q8xWvg+2fKVkFcU9pK0Tf3YsQ+nM+RB3jA4cgoHWvC+fC7QfbF7MA4r+o5RD3/Z7poAl0UOmaZxB5qQ0Q8e4pEH5CB8TdyrMh9v586gByVoHvRLB8w8snYP9bdD+GmFt7D0Kb9ULMUU6AuCer3+HsGSAA+ssD5GHxhWC+z/PbkPDNS3cAOTdQYiZE/a5cMP/i1YcOoOCKWf4MIn73EiT8zz8B+y+76gJEf918iDs3L4KEp+BqcDja7lvrAABDWdll", "shape": [60], "dtype": "float64", "byteorder": "<"}, "GBR": {"py/object": "numpy.ndarray", "base": {"py/object": "numpy.ndarray", "values": "eJwB4AEf/vnUN9lfC7JAcKcnmwHNoUBEWDgI4D2jQAhJe7qheKFAILEWL917skAQwlpcILGpQAnZtT4o1dRATwBmYXJPSsDIHEaHEOeMwAWcqSeJiWhAsU4sj0O7UEDKTOb8rSehQF2O9xl0l91A5NctrEfmFcBaWq80vUS1QB4QomBz0J9AfyLFvZTUk0DibrC7At7WQDWu7a0bvOlAi0rlih+QZ0AK/jmbnmiHQAdKF5WZoNRAfhe9fc2CfUAfkEfE9rSZQI7V1bGH3tBAYc06aupiRkCwHABTliPiQDoBbdJtlJ9AW0oD3PUw3kDqQifM6e+hQPLkkIP8NqNAmYoBhQ1SxUBcmT4OOn7lQHISlJXSDbJA3jeDITs4okAILK8wP5Z7QNbZevQAGaBAQT1Km/r64ECsGY7QYhplQPgErzES8uNAVfer0MWN40AWIKHMLsrXQKYEY4mxGqBAhEOYSv8EikBFt+WTf0xywHFiRDa6JOVApCT4z1vykkBgM9iJTLvVQPGlbavCr2hAMJ5L/mDNoEBFTs3xX7tgwBvy+jTRc+NA3tsVYLVV5UCEkMEqz+rQQDj8R3PH2ORAB99Q3kl3zEAWXDClt9l3QMpM5vytJ6FAqISL/C1krkARcm3X/EKxQD2W6to=", "shape": [60], "dtype": "float64", "byteorder": "<"}, "shape": [60], "dtype": "float64"}}}}